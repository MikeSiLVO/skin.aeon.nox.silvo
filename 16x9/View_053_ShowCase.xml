<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="scmfixed">
		<control type="fixedlist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="scmwrap">
		<control type="wraplist" id="53">
			<include>contents53list</include>
		</control>
	</include>
	<include name="contents53list">
		<left>-69</left>
		<top>540</top>
		<width>2058</width>
		<height>525</height>
		<onleft>53</onleft>
		<onright>53</onright>
		<onup condition="!ListItem.IsParentFolder">4401</onup>
		<onup condition="ListItem.IsCollection">62</onup>
		<!-- <onup condition="!Control.IsVisible(62)">4401</onup>
		<onup condition="Control.IsVisible(62)">62</onup> -->
		<ondown condition="Control.IsVisible(95360)">95360</ondown>
		<ondown condition="!Control.IsVisible(95360)">4400</ondown>
		<visible>!Skin.HasSetting(skinvariables.viewtypes) + [Container.Content(movies) | Container.Content(genres) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(videoversions) | Container.Content(videoversions) | Container.Content(artists) | Container.Content(sets) | Container.Content(musicvideos)] | Skin.HasSetting(skinvariables.viewtypes) + $EXP[Exp_View_53]</visible>
		<viewtype label="31077">bigwrap</viewtype>
		<pagecontrol>95360</pagecontrol>
		<scrolltime tween="quadratic">300</scrolltime>
		<focusposition>3</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<itemlayout height="525" width="155" condition="![Skin.HasSetting(noshowcaseflow) + !Control.IsVisible(6000)]" />
		<focusedlayout height="525" width="155" condition="![Skin.HasSetting(noshowcaseflow) + !Control.IsVisible(6000)]" />
		<itemlayout height="525" width="294" condition="Skin.HasSetting(noshowcaseflow)">
			<control type="group">
				<top>30</top>
				<animation effect="fade" time="0" delay="800">Visible</animation>
				<control type="image">
					<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseNoCase</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseNoCaseClear</include>
				</control>
				<control type="image">
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
					<include>MovieShowcaseThumb</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseCase</include>
					<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
				</control>
				<control type="image">
					<texture background="true">$VAR[OverlayVar]</texture>
					<include>WatchedOverlayShowCase</include>
				</control>
			</control>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
				<param name="left">16</param>
				<param name="top">40</param>
			</include>
		</itemlayout>
		<focusedlayout height="525" width="294" condition="Skin.HasSetting(noshowcaseflow)">
			<control type="group">
				<top>30</top>
				<animation effect="fade" time="0" delay="800">Visible</animation>
				<animation effect="zoom" start="75" end="100" center="147,345" time="300" reversible="false" tween="cubic">Focus</animation>
				<control type="group">
					<visible>Control.IsVisible(7000)</visible>
					<control type="image">
						<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
						<include>MovieShowcaseCase</include>
						<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
					</control>
					<control type="image">
						<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
						<include>MovieShowcaseNoCase</include>
					</control>
					<control type="image">
						<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
						<include>MovieShowcaseNoCaseClear</include>
					</control>
					<control type="image">
						<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
						<include>MovieShowcaseThumb</include>
					</control>
					<control type="image">
						<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
						<include>MovieShowcaseCase</include>
						<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
					</control>
					<control type="image">
						<texture background="true">$VAR[OverlayVar]</texture>
						<include>WatchedOverlayShowCase</include>
					</control>
					<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
						<param name="left">16</param>
						<param name="top">10</param>
					</include>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="View_53_ShowCase">
		<control type="group">
			<visible>Control.IsVisible(53) + !Container.Content(genres)</visible>
			<control type="label" id="4444">
				<description>ShowCase Open Case Movies</description>
				<label>$LOCALIZE[31966]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(Showcase.Delay))">ShowCaseDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(showcasemod) + !ListItem.IsCollection + Container.Content(movies)</visible>
			</control>
			<control type="label" id="4445">
				<description>ShowCase Boxset Mod</description>
				<label>$LOCALIZE[31965]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(Showcase.Delay))">ShowCaseDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(boxsetmod) + ListItem.IsCollection</visible>
			</control>
			<control type="label" id="4446">
				<description>ShowCase Open Case Sets</description>
				<label>$LOCALIZE[31966]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(Showcase.Delay))">ShowCaseDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(showcasemod) + ListItem.IsCollection + !Skin.HasSetting(boxsetmod) + [Container.Content(movies) | Container.Content(sets)]</visible>
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(53)</visible>
			<animation effect="slide" end="0,55" time="0" condition="Container.Content(genres)">Conditional</animation>
			<top>-36</top>
			<include>ViewAnimation</include>
			<control type="group">
				<top>570</top>
				<left>55</left>
				<camera x="960" y="810" />
				<control type="group" id="6001">
					<visible>Container.OnNext + !Skin.HasSetting(noshowcaseflow)</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true">$VAR[CaseBackPathVar]$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseNoCase</include>
								<visible>!String.IsEmpty(ListItem(-1).Title)</visible>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseBackPathVar]$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseNoCaseClear</include>
								<visible>!String.IsEmpty(ListItem(-1).Title)</visible>
							</control>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes-1Var]</texture>
								<include>MovieShowcaseCase</include>
								<visible>!String.IsEmpty(ListItem(-1).Title) + ![ListItem(-1).IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
								<param name="left">16</param>
								<param name="top">10</param>
								<param name="label">$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</param>
								<param name="visible">Integer.IsGreater(ListItem(-1).Property(UnWatchedEpisodes),0)</param>
							</include>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<visible>Container.OnPrevious + !Skin.HasSetting(noshowcaseflow)</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true">$VAR[CaseBackPathVar]$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseNoCase</include>
								<visible>!String.IsEmpty(ListItem(1).Title)</visible>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseBackPathVar]$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseNoCaseClear</include>
								<visible>!String.IsEmpty(ListItem(1).Title)</visible>
							</control>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<texture background="true">$VAR[CaseTypePathVar]$VAR[ShowcaseRes1Var]</texture>
								<include>MovieShowcaseCase</include>
								<visible>!String.IsEmpty(ListItem(1).Title) + ![ListItem(1).IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
								<param name="left">16</param>
								<param name="top">10</param>
								<param name="label">$INFO[ListItem(1).Property(UnWatchedEpisodes)]</param>
								<param name="visible">Integer.IsGreater(ListItem(1).Property(UnWatchedEpisodes),0)</param>
							</include>
						</control>
					</control>
				</control>
				<control type="group" id="6000">
					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002) + !Skin.HasSetting(noshowcaseflow)</visible>
					<control type="group">
						<left>15</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="-135" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-1028" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="0" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-866" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="135" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-704" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="270" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-543" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="405" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-384" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="540" end="55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="-226" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1965" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="1028" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1830" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="866" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1695" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="704" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1560" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="543" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1425" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="384" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<animation type="Conditional" condition="Skin.HasSetting(noshowcaseflow)">
							<effect type="rotatey" center="1290" end="-55" time="640" tween="cubic" easing="inout" />
							<effect type="slide" end="226" time="640" tween="cubic" easing="inout" />
						</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<!-- Workaround for camera bug. As soon as the camera tag is applied to the group, label will be invisible -->
						<animation effect="rotatey" center="0" start="1" end="1" time="0" condition="Skin.HasSetting(Disable.UnwatchedIcon) + [Container.Content(tvshows) | Container.Content(seasons)]">Conditional</animation>
						<visible>!String.IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(ShowCaseWrapList)</visible>
						<include>MovieShowCaseItem0</include>
					</control>
				</control>
				<control type="group" id="7000">
					<visible>[Container.OnNext | Container.OnPrevious]</visible>
					<animation effect="fade" time="1600" end="0" reversible="false">Hidden</animation>
					<control type="label">
						<include>HiddenObject</include>
					</control>
				</control>
			</control>
			<include condition="Skin.HasSetting(ShowCaseWrapList)">scmfixed</include>
			<include condition="!Skin.HasSetting(ShowCaseWrapList)">scmwrap</include>
			<control type="group">
				<left>813</left>
				<top>570</top>
				<visible>!Control.IsVisible(7000) + Skin.HasSetting(noshowcaseflow)</visible>
				<include>MovieShowCaseItem0</include>
				<include>BoxsetMod</include>
			</control>
		</control>
	</include>
	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-10</top>
		<width>304</width>
		<height>434</height>
		<align>center</align>
		<aspectratio>scale</aspectratio>
		<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowcaseCase">
		<left>-55</left>
		<top>-50</top>
		<width>375</width>
		<height>500</height>
		<bordersize>20</bordersize>
		<visible>[Skin.HasSetting(Enable.ShowCase.Covers) + [Container.Content(movies) | Container.Content(sets)]] | [Skin.HasSetting(Enable.ShowCase.TVCovers) + [Container.Content(tvshows) | Container.Content(seasons)]]</visible>
		<visible>!Container.Content(genres) + !ListItem.IsParentFolder</visible>
	</include>
	<include name="MovieShowcaseNoCase">
		<left>-53</left>
		<top>-17</top>
		<width>372</width>
		<height>462</height>
		<bordersize>20</bordersize>
		<visible>!Skin.HasSetting(useclearcases) + Skin.HasSetting(showcasemod) + [Container.Content(movies) | Container.Content(sets)] + !ListItem.IsParentFolder</visible>
	</include>
	<include name="MovieShowcaseNoCaseClear">
		<left>-55</left>
		<top>-50</top>
		<width>375</width>
		<height>500</height>
		<bordersize>20</bordersize>
		<visible>Skin.HasSetting(useclearcases) + Skin.HasSetting(showcasemod) + [Container.Content(movies) | Container.Content(sets)] + !ListItem.IsParentFolder</visible>
	</include>
	<include name="WatchedOverlayShowCase">
		<left>220</left>
		<top>-10</top>
		<width>80</width>
		<height>80</height>
		<bordersize>20</bordersize>
		<visible>[!String.IsEmpty(Skin.String(53.Movies.DisableOverlay)) + Container.Content(movies)] | [!String.IsEmpty(Skin.String(53.TV.DisableOverlay)) + Container.Content(tvshows)] | [!String.IsEmpty(Skin.String(53.Sets.DisableOverlay)) + Container.Content(sets)] | [!String.IsEmpty(Skin.String(53.Seasons.DisableOverlay)) + Container.Content(seasons)] | [!String.IsEmpty(Skin.String(53.MusicVideos.DisableOverlay)) + Container.Content(musicvideos)]</visible>
	</include>
	<include name="ShowCaseItemContent">
		<param name="ListItem.Position" />
		<param name="ShowcaseItemVar" />
		<param name="ShowcaseResVar" />
		<definition>
			<control type="image">
				<texture background="true">$VAR[CaseBackPathVar]$PARAM[ShowcaseResVar]</texture>
				<include>MovieShowcaseNoCase</include>
				<visible>!String.IsEmpty(ListItem($PARAM[ListItem.Position]).Title)</visible>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseBackPathVar]$PARAM[ShowcaseResVar]</texture>
				<include>MovieShowcaseNoCaseClear</include>
				<visible>!String.IsEmpty(ListItem($PARAM[ListItem.Position]).Title)</visible>
			</control>
			<control type="image">
				<texture background="true" fallback="DefaultVideo.png">$PARAM[ShowcaseItemVar]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseTypePathVar]$PARAM[ShowcaseResVar]</texture>
				<include>MovieShowcaseCase</include>
				<visible>![ListItem($PARAM[ListItem.Position]).IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)] + !String.IsEmpty(ListItem($PARAM[ListItem.Position]).Title)</visible>
			</control>
		</definition>
	</include>
	<include name="MovieShowCaseItem-7">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-7</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-7Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-7Var]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-7).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem-6">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-6</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-6Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-6Var]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-6).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem-5">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-5</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-5Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-5Var]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-5).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem-4">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-4</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-4Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-4Var]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-4).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem-3">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-3</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-3Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-3Var]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-3).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem-2">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-2</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-2Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-2Var]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-2).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem-1">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">-1</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem-1Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes-1Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay-1Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">16</param>
			<param name="top">10</param>
			<param name="label">$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-1).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="group">
			<visible>!listItem.IsCollection + Skin.HasSetting(boxsetmod) | !Skin.HasSetting(boxsetmod)</visible>
			<control type="image">
				<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
				<include>MovieShowcaseNoCase</include>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
				<include>MovieShowcaseNoCaseClear</include>
			</control>
			<control type="image">
				<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
				<include>MovieShowcaseCase</include>
				<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
			</control>
			<control type="group">
				<animation effect="slide" end="0,-12" condition="Skin.HasSetting(useclearcases)">Conditional</animation>
				<left>25</left>
				<top>72</top>
				<width>240</width>
				<height>240</height>
				<visible>!ListItem.IsParentFolder + Skin.HasSetting(Enable.ShowCase.Covers) + Skin.HasSetting(showcasemod) + [Container.Content(movies) | Container.Content(sets)]</visible>
				<control type="image">
					<texture background="true" fallback="special://skin/extras/cdart/bd.png">$INFO[ListItem(0).Art(discart)]</texture>
					<include>ShowCaseModDiscAnimation</include>
					<visible>!ListItem.IsCollection + !Container.Content(sets)</visible>
				</control>
				<include>ShowCaseRollingMovieSetDiscs</include>
			</control>
			<control type="group">
				<animation effect="slide" end="0,-12" condition="Skin.HasSetting(useclearcases)">Conditional</animation>
				<left>30</left>
				<top>91</top>
				<width>230</width>
				<height>230</height>
				<visible>!ListItem.IsParentFolder + !Skin.HasSetting(Enable.ShowCase.Covers) + Skin.HasSetting(showcasemod) + [Container.Content(movies) | Container.Content(sets)]</visible>
				<control type="image">
					<texture background="true" fallback="special://skin/extras/cdart/bd.png">$INFO[ListItem(0).Art(discart)]</texture>
					<include>ShowCaseModDiscAnimation</include>
					<visible>!ListItem.IsCollection + !Container.Content(sets)</visible>
				</control>
				<include>ShowCaseRollingMovieSetDiscs</include>
			</control>
			<control type="group">
				<include>OpenCaseAnimation</include>
				<control type="image">
					<fadetime>250</fadetime>
					<include>MovieShowcaseThumb</include>
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseFocusedItem0Var]</texture>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]$VAR[GlobalCaseVar]</texture>
					<include>MovieShowcaseCase</include>
					<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase</include>
				</control>
			</control>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
				<param name="left">16</param>
				<param name="top">10</param>
			</include>
		</control>
		<include>BoxsetMod</include>
	</include>
	<include name="MovieShowCaseItem1">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">1</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem1Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes1Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay1Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">2</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem2Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes2Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay2Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">3</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem3Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes3Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay3Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">4</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem4Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes4Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay4Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">5</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem5Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes5Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay5Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">6</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem6Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes6Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay6Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<include content="ShowCaseItemContent">
			<param name="ListItem.Position">7</param>
			<param name="ShowcaseItemVar">$VAR[ShowcaseItem7Var]</param>
			<param name="ShowcaseResVar">$VAR[ShowcaseRes7Var]</param>
		</include>
		<control type="image">
			<texture background="true">$VAR[IconOverlay7Var]</texture>
			<include>WatchedOverlayShowCase</include>
		</control>
	</include>
	<variable name="ShowcaseItem-7Var">
		<value condition="!String.IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-7).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-7).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!String.IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-6).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-6).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-5).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-5).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-4).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-4).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-3).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-3).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-2).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-2).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(-1).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(-1).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem.Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ShowcaseFocusedItem0Var">
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem.Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem.Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value condition="Control.IsVisible(4412)">$INFO[Control.GetLabel(4412)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(1).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(1).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(2).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(2).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(3).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(3).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(4).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(4).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(5).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(5).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!String.IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(6).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(6).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!String.IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(7).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(7).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!String.IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(8).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(8).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!String.IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(moviegenreicons.path))">$INFO[Skin.String(moviegenreicons.path)]$INFO[ListItem(9).Label]$INFO[Skin.String(moviegenreicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(MovieGenreIconPath))">$INFO[Skin.String(MovieGenreIconPath)]$INFO[ListItem(9).Label,,.jpg]</value>
		<value condition="Container.Content(genres) + !Skin.HasSetting(coloredflags)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/default/,.jpg]</value>
		<value condition="Container.Content(genres) + Skin.HasSetting(coloredflags)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/colored/,.jpg]</value>
		<value>$INFO[ListItem(9).Icon]</value>
	</variable>
	<variable name="ShowcaseRes-7Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-7).IsCollection">set.png</value>
		<value condition="ListItem(-7).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-7).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-7).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-7).Filename,webdl) | String.Contains(ListItem(-7).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-7).VideoResolution)">$INFO[ListItem(-7).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes-6Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-6).IsCollection">set.png</value>
		<value condition="ListItem(-6).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-6).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-6).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-6).Filename,webdl) | String.Contains(ListItem(-6).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-6).VideoResolution)">$INFO[ListItem(-6).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes-5Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-5).IsCollection">set.png</value>
		<value condition="ListItem(-5).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-5).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-5).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-5).Filename,webdl) | String.Contains(ListItem(-5).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-5).VideoResolution)">$INFO[ListItem(-5).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes-4Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-4).IsCollection">set.png</value>
		<value condition="ListItem(-4).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-4).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-4).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-4).Filename,webdl) | String.Contains(ListItem(-4).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-4).VideoResolution)">$INFO[ListItem(-4).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes-3Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-3).IsCollection">set.png</value>
		<value condition="ListItem(-3).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-3).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-3).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-3).Filename,webdl) | String.Contains(ListItem(-3).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-3).VideoResolution)">$INFO[ListItem(-3).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes-2Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-2).IsCollection">set.png</value>
		<value condition="ListItem(-2).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-2).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-2).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-2).Filename,webdl) | String.Contains(ListItem(-2).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-2).VideoResolution)">$INFO[ListItem(-2).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes-1Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(-1).IsCollection">set.png</value>
		<value condition="ListItem(-1).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(-1).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(-1).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(-1).Filename,webdl) | String.Contains(ListItem(-1).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(-1).VideoResolution)">$INFO[ListItem(-1).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes1Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(1).IsCollection">set.png</value>
		<value condition="ListItem(1).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(1).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(1).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(1).Filename,webdl) | String.Contains(ListItem(1).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(1).VideoResolution)">$INFO[ListItem(1).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes2Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(2).IsCollection">set.png</value>
		<value condition="ListItem(2).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(2).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(2).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(2).Filename,webdl) | String.Contains(ListItem(2).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(2).VideoResolution)">$INFO[ListItem(2).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes3Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(3).IsCollection">set.png</value>
		<value condition="ListItem(3).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(3).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(3).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(3).Filename,webdl) | String.Contains(ListItem(3).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(3).VideoResolution)">$INFO[ListItem(3).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes4Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(4).IsCollection">set.png</value>
		<value condition="ListItem(4).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(4).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(4).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(4).Filename,webdl) | String.Contains(ListItem(4).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(4).VideoResolution)">$INFO[ListItem(4).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes5Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(5).IsCollection">set.png</value>
		<value condition="ListItem(5).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(5).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(5).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(5).Filename,webdl) | String.Contains(ListItem(5).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(5).VideoResolution)">$INFO[ListItem(5).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes6Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(6).IsCollection">set.png</value>
		<value condition="ListItem(6).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(6).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(6).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(6).Filename,webdl) | String.Contains(ListItem(6).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(6).VideoResolution)">$INFO[ListItem(6).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="ShowcaseRes7Var">
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">tvseries.png</value>
		<value condition="ListItem(7).IsCollection">set.png</value>
		<value condition="ListItem(7).IsStereoscopic">3d.png</value>
		<value condition="String.Contains(ListItem(7).Filename,hddvd)">hddvd.png</value>
		<value condition="String.Contains(ListItem(7).Filename,hdtv)">hdtv.png</value>
		<value condition="String.Contains(ListItem(7).Filename,webdl) | String.Contains(ListItem(7).Filename,web-dl)">webdl.png</value>
		<value condition="!String.IsEmpty(ListItem(7).VideoResolution)">$INFO[ListItem(7).VideoResolution]p.png</value>
		<value>trailer.png</value>
	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(-1).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(-1).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem.Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(1).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(1).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(2).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(2).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(3).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(3).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay4Var">
		<value condition="ListItem(4).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(4).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(4).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay5Var">
		<value condition="ListItem(5).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(5).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(5).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay6Var">
		<value condition="ListItem(6).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(6).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(6).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay7Var">
		<value condition="ListItem(7).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(7).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(7).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay8Var">
		<value condition="ListItem(8).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(8).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(8).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<variable name="IconOverlay9Var">
		<value condition="ListItem(9).IsResumable + !Skin.HasSetting(Disable.Resumable)">overlays/resumable.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayUnwatched) + String.IsEqual(ListItem(9).Overlay,OverlayUnwatched.png)">overlays/OverlayUnwatched.png</value>
		<value condition="!Skin.HasSetting(Disable.OverlayWatched) + String.IsEqual(ListItem(9).Overlay,OverlayWatched.png)">overlays/OverlayWatched.png</value>
	</variable>
	<include name="ShowCaseRollingMovieSetDiscs">
		<control type="group">
			<visible>Skin.HasSetting(showcasemod) + ListItem.IsCollection</visible>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(0).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="0" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(1).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="500" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="500" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(1).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(2).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="1000" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="1000" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(3).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="1500" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="1500" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(4).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="2000" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="2000" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(5).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="2500" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="2500" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(6).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="3000" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="3000" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(7).Art(discart)]</texture>
				<animation type="Conditional" condition="[!String.IsEmpty(Control.GetLabel(4446)) + Control.IsVisible(4446)]" reversible="false">
					<effect type="slide" start="1100,0" end="0,0" delay="3500" time="2600" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="720" delay="3500" time="2600" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))</visible>
			</control>
		</control>
	</include>
	<include name="BoxsetMod">
		<control type="group">
			<visible>Skin.HasSetting(boxsetmod) + ListItem.IsCollection</visible>
			<control type="group">
				<control type="image">
					<texture background="true">$VAR[CaseBackPathVar]set.png</texture>
					<include>MovieShowcaseCase</include>
					<visible>!Skin.HasSetting(Disable.ShowCaseSetCases)</visible>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseBackPathVar]set.png</texture>
					<include>MovieShowcaseNoCase</include>
				</control>
				<control type="image">
					<texture background="true">$VAR[CaseBackPathVar]set.png</texture>
					<include>MovieShowcaseNoCaseClear</include>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(fanart)]</texture>
				</control>
				<control type="image">
					<left>37</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[Container(4500).ListItemAbsolute(0).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>37</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(0).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(poster))</visible>
				</control>
				<control type="image">
					<left>37</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[Container(4500).ListItemAbsolute(1).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>30</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(1).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(1).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(1).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(1).Art(poster))</visible>
				</control>
				<control type="image">
					<left>37</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[Container(4500).ListItemAbsolute(2).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>37</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(2).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
					<texture background="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(poster))</visible>
				</control>
				<control type="image">
					<left>218</left>
					<top>10</top>
					<width>90</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
					<texture background="true">thumbs/sets/div.png</texture>
				</control>
			</control>
			<control type="group">
				<animation type="Conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="19" end="90" time="440" tween="cubic" easing="in" />
					<effect type="rotatey" center="19" start="90" end="90" time="0" delay="440" />
					<effect type="fade" start="0" end="100" time="0" delay="400" />
					<effect type="rotatey" center="19" start="-90" end="-40" time="440" delay="440" tween="cubic" />
				</animation>
				<control type="image">
					<texture background="true">$VAR[CaseTypePathVar]set.png</texture>
					<include>MovieShowcaseCase</include>
					<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(fanart)]</texture>
				</control>
				<control type="image">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Container(4500).ListItemAbsolute(3).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(3).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Container(4500).ListItemAbsolute(4).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(4).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Container(4500).ListItemAbsolute(5).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(5).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>20</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="right" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(poster))</visible>
				</control>
			</control>
			<control type="image">
				<left>-18</left>
				<top>10</top>
				<width>90</width>
				<height>392</height>
				<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
				<texture background="true">thumbs/sets/div.png</texture>
			</control>
			<control type="group">
				<animation type="Conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="278" end="-90" time="1040" tween="cubic" easing="in" />
					<effect type="rotatey" center="278" start="-90" end="-90" time="0" delay="1040" />
					<effect type="fade" start="0" end="100" time="0" delay="1000" />
					<effect type="rotatey" center="278" start="90" end="38" time="440" delay="1040" tween="cubic" />
				</animation>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/backset.png" diffuse="thumbs/sets/backset.png">$INFO[ListItem.Art(fanart)]</texture>
				</control>
				<control type="image">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Container(4500).ListItemAbsolute(6).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>10</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(6).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc3.png" diffuse="thumbs/sets/disc3.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Container(4500).ListItemAbsolute(7).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>97</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(7).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc2.png" diffuse="thumbs/sets/disc2.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(poster))</visible>
				</control>
				<control type="image">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" flipx="true">$INFO[Container(4500).ListItemAbsolute(8).Art(discart)]</texture>
				</control>
				<control type="group">
					<left>40</left>
					<top>182</top>
					<width>220</width>
					<height>220</height>
					<visible>String.IsEmpty(Container(4500).ListItemAbsolute(8).Art(discart))</visible>
					<control type="image">
						<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" diffuse="thumbs/sets/cdart-mask.png">$INFO[Container(4500).ListItemAbsolute(8).Art(poster)]</texture>
					</control>
					<control type="image">
						<texture>thumbs/sets/cdarttop.png</texture>
						<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(8).Art(poster))</visible>
					</control>
				</control>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>392</height>
					<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					<texture background="true" flipx="true" fallback="thumbs/sets/disc1.png" diffuse="thumbs/sets/disc1.png">$INFO[ListItem.Art(fanart)]</texture>
					<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(8).Art(poster))</visible>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(Disable.BoxsetBrochure)</visible>
					<top>28</top>
					<control type="image">
						<top>-40</top>
						<width>290</width>
						<height>445</height>
						<texture background="true" flipx="true">thumbs/sets/brochure.png</texture>
					</control>
					<control type="image">
						<left>43</left>
						<top>-43</top>
						<width>200</width>
						<height>150</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<colordiffuse>99000000</colordiffuse>
					</control>
					<control type="image">
						<left>45</left>
						<top>-45</top>
						<width>200</width>
						<height>150</height>
						<aspectratio>keep</aspectratio>
						<texture background="true" flipx="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<colordiffuse>CCFFFFFF</colordiffuse>
					</control>
					<control type="group">
						<animation type="Conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
							<effect type="fade" start="0" end="100" time="0" delay="1100" />
							<effect type="rotatey" center="130" start="48" end="180" time="50" delay="1000" tween="cubic" />
						</animation>
						<top>5</top>
						<left>-8</left>
						<control type="label">
							<width>250</width>
							<height>60</height>
							<textcolor>black</textcolor>
							<font>font11</font>
							<align>center</align>
							<wrapmultiline>true</wrapmultiline>
							<label>$INFO[ListItem.Label]</label>
							<visible>String.IsEmpty(ListItem.Art(clearlogo))</visible>
						</control>
						<control type="textbox">
							<top>65</top>
							<width>250</width>
							<height>280</height>
							<align>center</align>
							<aligny>top</aligny>
							<label>[B]$INFO[Container(4500).NumItems,, $LOCALIZE[342]][/B]</label>
							<font>font10</font>
							<textcolor>black</textcolor>
						</control>
						<control type="textbox">
							<left>10</left>
							<top>90</top>
							<width>230</width>
							<height>280</height>
							<aligny>top</aligny>
							<label>$INFO[Window(Home).Property(SkinInfo.Set.Movies.Title)]</label>
							<font>font10</font>
							<textcolor>black</textcolor>
						</control>
						<control type="textbox">
							<top>90</top>
							<width>250</width>
							<height>280</height>
							<aligny>top</aligny>
							<label>$INFO[ListItem.Plot]</label>
							<font>font10</font>
							<textcolor>black</textcolor>
							<visible>String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Title))</visible>
						</control>
					</control>
					<control type="image">
						<left>18</left>
						<top>-18</top>
						<width>260</width>
						<height>392</height>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
						<texture background="true" flipx="true" fallback="thumbs/sets/brochurecover.png" diffuse="thumbs/sets/brochurecover.png">$INFO[ListItem.Art(fanart)]</texture>
					</control>
				</control>
			</control>
			<control type="group">
				<animation type="Conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="300" end="-90" time="1040" tween="cubic" easing="in" />
					<effect type="rotatey" center="300" start="-90" end="-90" time="0" delay="1040" />
					<effect type="fade" start="100" end="0" time="0" delay="1000" />
					<effect type="rotatey" center="300" start="90" end="0" time="440" delay="1040" tween="cubic" />
				</animation>
				<control type="image">
					<left>18</left>
					<top>10</top>
					<width>260</width>
					<height>394</height>
					<aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
					<texture background="true" diffuse="thumbs/sets/backset.png">thumbs/sets/backset.png</texture>
				</control>
			</control>
			<control type="group">
				<animation type="Conditional" reversible="false" condition="[!String.IsEmpty(Control.GetLabel(4445)) + Control.IsVisible(4445)]">
					<effect type="rotatey" center="0" end="90" time="440" tween="cubic" easing="in" />
					<effect type="rotatey" center="0" start="90" end="90" time="0" delay="440" />
					<effect type="fade" start="100" end="0" time="0" delay="400" />
					<effect type="rotatey" center="0" start="-90" end="0" time="440" delay="440" tween="cubic" />
				</animation>
				<control type="image">
					<include>MovieShowcaseThumb</include>
					<texture background="true" fallback="DefaultVideo.png">$VAR[ShowcaseFocusedItem0Var]</texture>
				</control>
				<control type="image">
					<include>MovieShowcaseCase</include>
					<texture background="true">$VAR[CaseTypePathVar]set.png</texture>
					<visible>![ListItem.IsCollection + Skin.HasSetting(Disable.ShowCaseSetCases)]</visible>
				</control>
				<control type="image">
					<texture background="true">$VAR[IconOverlay0Var]</texture>
					<include>WatchedOverlayShowCase</include>
				</control>
			</control>
		</control>
	</include>
</includes>