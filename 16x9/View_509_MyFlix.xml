<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_509_MyFlix">
		<control type="group">
			<visible>Control.IsVisible(509)</visible>
			<include>ViewAnimation</include>
			<control type="label" id="4447">
				<description>MyFlix Open Case Movies</description>
				<label>$LOCALIZE[31966]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(MyFlix.Delay))">MyFlixDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(Enable.MyFlix.OpenCase) + !String.IsEqual(ListItem.DBTYPE,set) + Container.Content(movies)</visible>
			</control>
			<control type="label" id="4448">
				<description>MyFlix Open Case Sets</description>
				<label>$LOCALIZE[31966]</label>
				<include>HiddenObject</include>
				<include condition="!String.IsEmpty(Skin.String(MyFlix.Delay))">MyFlixDelayAnimation</include>
				<animation effect="fade" end="100" time="120" delay="1600">WindowOpen</animation>
				<animation effect="fade" end="100" time="120" delay="1600">Visible</animation>
				<visible>Skin.HasSetting(Enable.MyFlix.OpenCase) + String.IsEqual(ListItem.DBTYPE,set)</visible>
			</control>
			<control type="group">
				<animation effect="slide" start="0" end="0,120" condition="[Container.Content(movies) + Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]">Conditional</animation>
				<animation effect="slide" start="0" end="0,45" condition="Container.Content(episodes)">Conditional</animation>
				<top>50</top>
				<visible>!ListItem.IsParentFolder</visible>
				<control type="group">
					<animation effect="slide" end="0,320" condition="Skin.HasSetting(Disable.MyFlixInfo)">Conditional</animation>
					<left>20</left>
					<height>160</height>
					<control type="image" id="50999">
						<width>800</width>
						<height>160</height>
						<aspectratio align="left" aligny="bottom">keep</aspectratio>
						<texture background="true">$VAR[ArtworkLogoVar]</texture>
						<visible>!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) | !String.IsEmpty(ListItem.Art(clearlogo)) </visible>
						<visible>[Container.Content(movies) | Container.Content(sets)] + Skin.HasSetting(Enable.MyFlix.MovieLogo) | [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + Skin.HasSetting(Enable.MyFlix.TVLogo)</visible>
					</control>
					<control type="group">
						<visible>!Control.IsVisible(50999)</visible>
						<animation effect="fade" time="300" delay="200">Visible</animation>
						<height>160</height>
						<control type="label">
							<left>4</left>
							<top>4</top>
							<height>160</height>
							<font>font_musicviz</font>
							<textcolor>shadow</textcolor>
							<label>$VAR[MyFlixTitleLabelVar]</label>
						</control>
						<control type="label">
							<height>160</height>
							<font>font_musicviz</font>
							<shadowcolor>shadow</shadowcolor>
							<label>$VAR[MyFlixTitleLabelVar]</label>
						</control>
					</control>
				</control>
				<control type="group">
					<left>10</left>
					<top>200</top>
					<width>1000</width>
					<height>160</height>
					<include>VisibleFadeAnimation</include>
					<visible>!Skin.HasSetting(Disable.MyFlixInfo)</visible>
					<control type="group">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<control type="image">
							<left>17</left>
							<top>-35</top>
							<width>65</width>
							<height>30</height>
							<texture colordiffuse="grey">logos/imdb.png</texture>
						</control>
						<control type="Label">
							<left>90</left>
							<top>-42</top>
							<width>125</width>
							<height>45</height>
							<label>[B]$INFO[ListItem.Top250,#][/B]</label>
							<font>font14</font>
							<shadowcolor>shadow</shadowcolor>
							<textcolor>grey</textcolor>
						</control>
					</control>
					<control type="grouplist">
						<visible>Container.Content(movies) | Container.Content(episodes)</visible>
						<visible>!ListItem.IsCollection</visible>
						<height>200</height>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Tagline)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>$VAR[ThemeLabelColor]</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Tagline]</label>
								<scroll>true</scroll>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>Container.Content(episodes)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>$VAR[ThemeLabelColor]</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Season,$LOCALIZE[20373] ]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>Container.Content(episodes)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Label,$LOCALIZE[20359] ]</label>
								<scroll>true</scroll>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Director)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Director]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Writer)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Writer]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!Container.Content(episodes) + !String.IsEmpty(ListItem.Genre)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Genre]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[FloorSubLabelVar]</label>
							</control>
						</control>
					</control>
					<control type="grouplist">
						<visible>ListItem.IsCollection + ![Container.OnNext | Container.OnPrevious]</visible>
						<animation effect="fade" time="300" delay="200">Visible</animation>
						<height>200</height>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Director)) | !String.IsEmpty(Container(4500).ListItem(0).Director)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[VideoDirectorVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Writer)) | !String.IsEmpty(Container(4500).ListItem(0).Writer)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[VideoWriterVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(Window(Home).Property(SkinInfo.Set.Movies.Genre)) | !String.IsEmpty(Container(4500).ListItem(0).Genre)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[VideoGenreVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[Container(4500).ListItem(0).Year]$INFO[Container(4500).ListItem(-1).Year, - ]$INFO[Container(4500).NumItems, • , $LOCALIZE[342]]$INFO[ListItem.RatingAndVotes, • ]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Runtime), • , $LOCALIZE[12391]]</label>
							</control>
						</control>
					</control>
					<control type="grouplist">
						<visible>[Container.Content(tvshows) | Container.Content(seasons)]</visible>
						<control type="label">
							<width>800</width>
							<height>80</height>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<font>font48_bold</font>
							<include>DefaultButtonsValues</include>
							<label>$INFO[ListItem.Label]</label>
							<visible>Container.Content(seasons)</visible>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(Disable.NextAired) + !Container.Content(seasons)</visible>
							<visible>!String.IsEmpty(Container(9143).ListItem.Status) | !String.IsEmpty(ListItem.Status)</visible>
							<height>40</height>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>$VAR[ThemeLabelColor]</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[TVShowStatusLabelVar]</label>
							</control>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(Disable.NextAired) + !Container.Content(seasons)</visible>
							<visible>!String.IsEmpty(Container(9143).ListItem.Property(Next_Aired)) | !String.IsEmpty(Container(9143).ListItem.Property(Last_Aired))</visible>
							<height>40</height>
							<control type="togglebutton">
								<left>10</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<include>NoFocusObject</include>
								<label></label>
								<altlabel></altlabel>
								<usealttexture>String.IsEmpty(Container(9143).ListItem.Property(Next_Aired))</usealttexture>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[NextAiredLabelVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Genre)</visible>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Genre]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<control type="label">
								<left>10</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[FloorSubLabelVar]</label>
							</control>
						</control>
					</control>
					<control type="textbox">
						<left>15</left>
						<top>213</top>
						<width>1000</width>
						<height>128</height>
						<font>font15</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<align>justify</align>
						<label>$VAR[VideoPlotVar]</label>
						<autoscroll delay="5000" time="2500" repeat="5000">true</autoscroll>
					</control>
				</control>
			</control>
			<include condition="!Skin.HasSetting(MyFlixWrap)">MyFlixFixed</include>
			<include condition="Skin.HasSetting(MyFlixWrap)">MyFlixWrapped</include>
			<control type="group">
				<top>530</top>
				<visible>[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)</visible>
				<include content="FlixCase">
					<param name="casepath">$VAR[CaseBackPathVar]</param>
				</include>
				<include>FlixNoCase</include>
				<include>FlixNoClearCase</include>
			</control>
			<control type="group">
				<left>34</left>
				<top>679</top>
				<width>215</width>
				<height>215</height>
				<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
				<include>MyFlixRollingMovieSetDiscs</include>
			</control>
			<control type="group">
				<left>38</left>
				<top>694</top>
				<width>211</width>
				<height>211</height>
				<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + !Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
				<animation effect="slide" end="-2,-11" condition="Skin.HasSetting(useclearcases)">Conditional</animation>
				<include>MyFlixRollingMovieSetDiscs</include>
			</control>
			<control type="group" id="7000">
				<visible>[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + [Container.OnNext | Container.OnPrevious] + Skin.HasSetting(Enable.MyFlix.OpenCase)</visible>
				<animation effect="fade" time="1000" end="0" reversible="false">Hidden</animation>
				<control type="label">
					<include>HiddenObject</include>
				</control>
			</control>
			<control type="group">
				<top>530</top>
				<visible>[[[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets)] + !Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)]</visible>
				<include>MyFlixModAnimation</include>
				<include>FlixPoster</include>
				<include>FlixPosterOverlay</include>
				<include>FlixCase</include>
			</control>
		</control>
	</include>
	<include name="MyFlixFixed">
		<control type="fixedlist" id="509">
			<include>MyFlixContent</include>
		</control>
	</include>
	<include name="MyFlixWrapped">
		<control type="wraplist" id="509">
			<include>MyFlixContent</include>
		</control>
	</include>
	<include name="MyFlixContent">
		<top>530</top>
		<width>1920</width>
		<height>600</height>
		<visible>!Skin.HasSetting(skinvariables.viewtypes) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(videoversions)] | Skin.HasSetting(skinvariables.viewtypes) + $EXP[Exp_View_509]</visible>
		<onleft>509</onleft>
		<onright>509</onright>
		<onup>SetProperty(MediaMenu,True,Home)</onup>
		<onup>SetFocus(9050)</onup>
		<ondown condition="Control.IsVisible(50960)">50960</ondown>
		<ondown condition="!Control.IsVisible(50960)">4400</ondown>
		<viewtype label="$LOCALIZE[31244]">bigwrap</viewtype>
		<pagecontrol>50960</pagecontrol>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<scrolltime tween="quadratic" easing="out">300</scrolltime>
		<itemlayout height="525" width="271" condition="[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets) | [Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
			<include>FlixNoCase</include>
			<include>FlixNoClearCase</include>
			<include>FlixPoster</include>
			<include>FlixPosterOverlay</include>
			<include>FlixDimmer</include>
			<include>FlixCase</include>
		</itemlayout>
		<focusedlayout height="525" width="271" condition="[Container.Content(movies) + !Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | Container.Content(sets) | [Container.Content(tvshows) + !Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
			<control type="group">
				<visible>[[Container.Content(movies) | Container.Content(sets)] + Control.IsVisible(7000) + Skin.HasSetting(Enable.MyFlix.OpenCase)] | [[Container.Content(movies) | Container.Content(sets)] + !Skin.HasSetting(Enable.MyFlix.OpenCase)] | Container.Content(tvshows)</visible>
				<include>FlixNoCase</include>
				<include>FlixNoClearCase</include>
				<include>FlixPoster</include>
				<include>FlixPosterOverlay</include>
				<include>FlixCase</include>
			</control>
		</focusedlayout>
		<itemlayout height="525" width="271" condition="Container.Content(seasons)">
			<include>FlixNoCase</include>
			<include>FlixNoClearCase</include>
			<include>FlixPoster</include>
			<include>FlixPosterOverlay</include>
			<include>FlixDimmer</include>
			<include>FlixCase</include>
		</itemlayout>
		<focusedlayout height="525" width="271" condition="Container.Content(seasons)">
			<include>FlixNoCase</include>
			<include>FlixNoClearCase</include>
			<include>FlixPoster</include>
			<include>FlixPosterOverlay</include>
			<include>FlixCase</include>
		</focusedlayout>
		<itemlayout height="270" width="480" condition="[Container.Content(movies) + Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
			<include>FlixLandscape</include>
			<include content="FlixDimmer">
				<param name="left">-10</param>
				<param name="top">197</param>
				<param name="width">480</param>
				<param name="height">270</param>
			</include>
		</itemlayout>
		<focusedlayout height="270" width="480" condition="[Container.Content(movies) + Skin.HasSetting(Enable.MyFlix.MovieLandscape)] | [Container.Content(tvshows) + Skin.HasSetting(Enable.MyFlix.TVLandscape)]">
			<include>FlixLandscape</include>
		</focusedlayout>
		<itemlayout height="270" width="480" condition="Container.Content(episodes)">
			<include>FlixEpisodeThumb</include>
			<include content="FlixDimmer">
				<param name="left">0</param>
				<param name="top">197</param>
				<param name="width">480</param>
				<param name="height">270</param>
			</include>
		</itemlayout>
		<focusedlayout height="270" width="480" condition="Container.Content(episodes)">
			<include>FlixEpisodeThumb</include>
		</focusedlayout>
	</include>
	<include name="FlixPoster">
		<control type="image">
			<left>10</left>
			<top>75</top>
			<width>268</width>
			<height>390</height>
			<texture background="true">$VAR[PosterThumbVar]</texture>
			<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
			<bordersize>20</bordersize>
		</control>
	</include>
	<include name="FlixPosterOverlay">
		<include content="PosterStatusOverlay">
			<param name="left">218</param>
			<param name="top">95</param>
			<param name="size">40</param>
			<param name="visible">!String.IsEmpty(Skin.String(509.Movies.DisableOverlay)) + [Container.Content(movies) | Container.Content(sets)] | !String.IsEmpty(Skin.String(509.TV.DisableOverlay)) + [Container.Content(tvshows) | Container.Content(seasons)]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">30</param>
			<param name="top">95</param>
		</include>
	</include>
	<include name="FlixLandscape">
		<control type="image">
			<left>-10</left>
			<top>197</top>
			<width>480</width>
			<height>270</height>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem0Var]</texture>
			<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
			<bordersize>20</bordersize>
		</control>
		<include content="PosterStatusOverlay">
			<param name="left">410</param>
			<param name="top">217</param>
			<param name="size">40</param>
			<param name="visible">!String.IsEmpty(Skin.String(509.Movies.DisableOverlay)) + [Container.Content(movies) | Container.Content(sets)] | [!String.IsEmpty(Skin.String(509.TV.DisableOverlay)) + Container.Content(tvshows)]</param>
		</include>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">10</param>
			<param name="top">217</param>
		</include>
	</include>
	<include name="FlixEpisodeThumb">
		<control type="image">
			<top>197</top>
			<width>480</width>
			<height>270</height>
			<aspectratio>scale</aspectratio>
			<bordersize>20</bordersize>
			<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[NoSpoilerIconVar]</texture>
		</control>
		<include content="PosterStatusOverlay">
			<param name="left">420</param>
			<param name="top">217</param>
			<param name="size">40</param>
			<param name="visible">!String.IsEmpty(Skin.String(509.Episodes.DisableOverlay)) + Container.Content(episodes)</param>
		</include>
		<control type="image">
			<top>197</top>
			<width>480</width>
			<height>270</height>
			<bordersize>20</bordersize>
			<texture>homewidgets/label_back_landscape.png</texture>
		</control>
		<control type="label">
			<left>25</left>
			<top>407</top>
			<width>430</width>
			<height>40</height>
			<label>$INFO[ListItem.Label]</label>
		</control>
	</include>
	<include name="FlixCase">
		<param name="casepath" default="$VAR[CaseTypePathVar]" />
		<definition>
			<control type="image">
				<left>-16</left>
				<top>60</top>
				<width>292</width>
				<height>408</height>
				<texture background="true">$PARAM[casepath]$VAR[GlobalCaseVar]</texture>
				<!-- <texture background="true">$VAR[CaseBackPathVar]</texture> -->
				<visible>Skin.HasSetting(Enable.MyFlix.Cases) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)]</visible>
			</control>
		</definition>
	</include>
	<include name="FlixNoCase">
		<control type="image">
			<left>-12</left>
			<top>89</top>
			<width>288</width>
			<height>376</height>
			<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
			<visible>!Skin.HasSetting(useclearcases) + !Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase) + [Container.Content(movies) | Container.Content(sets)] + !ListItem.IsParentFolder</visible>
		</control>
	</include>
	<include name="FlixNoClearCase">
		<control type="image">
			<left>-10</left>
			<top>66</top>
			<width>280</width>
			<height>394</height>
			<texture background="true">$VAR[CaseBackPathVar]$VAR[GlobalCaseVar]</texture>
			<visible>Skin.HasSetting(useclearcases) + !Skin.HasSetting(Enable.MyFlix.Cases) + Skin.HasSetting(Enable.MyFlix.OpenCase) + [Container.Content(movies) | Container.Content(sets)] + !ListItem.IsParentFolder</visible>
		</control>
	</include>
	<include name="FlixDimmer">
		<param name="left" default="10" />
		<param name="top" default="75" />
		<param name="width" default="268" />
		<param name="height" default="390" />
		<definition>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<texture border="20">colors/black.png</texture>
				<colordiffuse>$VAR[MyFlixDimmerVar]</colordiffuse>
				<bordersize>20</bordersize>
			</control>
		</definition>
	</include>
	<include name="MyFlixRollingMovieSetDiscs">
		<control type="image">
			<texture background="true" fallback="special://skin/extras/cdart/bd.png">$INFO[ListItem(0).Art(discart)]</texture>
			<animation type="Conditional" condition="Control.IsVisible(4447)" reversible="false">
				<effect type="slide" start="1900,0" end="0,0" delay="0" time="3000" tween="cubic" easing="inout" />
				<effect type="rotate" start="0" center="auto" end="1080" delay="0" time="3000" tween="cubic" easing="inout" />
			</animation>
			<visible>!ListItem.IsCollection</visible>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(Enable.MyFlix.OpenCase) + ListItem.IsCollection</visible>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(0).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="0" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="0" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(1).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(1).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(2).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="1000" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="1000" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(3).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="1500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="1500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(4).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="2000" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="2000" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(5).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="2500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="2500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(6).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="3000" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="3000" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart))</visible>
			</control>
			<control type="image">
				<aspectratio>keep</aspectratio>
				<texture background="true">$INFO[Container(4500).ListItemAbsolute(7).Art(discart)]</texture>
				<animation type="Conditional" condition="Control.IsVisible(4448)" reversible="false">
					<effect type="slide" start="1900,0" end="0,0" delay="3500" time="3000" tween="cubic" easing="inout" />
					<effect type="rotate" start="0" center="auto" end="1080" delay="3500" time="3000" tween="cubic" easing="inout" />
				</animation>
				<visible>!String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))</visible>
			</control>
		</control>
	</include>
</includes>