<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="Defaults.xml" />
	<include file="Includes_Animations.xml" />
	<include file="Includes_Backgrounds.xml" />
	<include file="Includes_CommonValues.xml" />
	<include file="Includes_Debug.xml" />
	<include file="Includes_DialogInfo.xml" />
	<include file="Includes_DialogSettings.xml" />
	<include file="Includes_Games.xml" />
	<include file="Includes_Home.xml" />
	<include file="Includes_LiveBG.xml" />
	<include file="Includes_Lyrics.xml" />
	<include file="Includes_MediaFlags.xml" />
	<include file="Includes_PVR.xml" />
	<include file="Includes_PVR_Views.xml" />
	<include file="Includes_Select.xml" />
	<include file="Includes_ViewSettings.xml" />
	<include file="Includes_Views.xml" />
	<include file="Includes_Widgets.xml" />
	<include file="script-skinshortcuts-includes.xml" />
	<include file="script-skinviewtypes-includes.xml" />
	<include file="Variables.xml" />
	<include file="Variables_Artwork.xml" />
	<include file="Variables_InfoPanel.xml" />
	<include file="Variables_OnClick.xml" />
	<include file="Variables_Paths.xml" />
	<include file="Variables_Widgets.xml" />
	<!-- Media Menu -->
	<include name="SideBladeLeft">
		<animation effect="slide" start="440,0" end="0,0" time="400" tween="quadratic" easing="out" condition="String.IsEmpty(Window(Home).Property(MediaMenu)) | Window.IsActive(videos) + Window.IsVisible(selectdialog) | Window.IsVisible(1126) | Window.IsVisible(progressdialog)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-440,0" time="400" tween="quadratic" easing="out">WindowClose</animation>
		<control type="image">
			<width>432</width>
			<height>1080</height>
			<texture border="40">mediamenu_back.png</texture>
		</control>
		<control type="button" id="9051">
			<include>HiddenObject</include>
			<onfocus condition="String.IsEmpty(Window(Home).Property(MediaMenu))">SetProperty(MediaMenu,True,Home)</onfocus>
			<onfocus condition="String.IsEmpty(Window(Home).Property(MediaMenu))">SetFocus(9050)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(Home).Property(MediaMenu))">ClearProperty(MediaMenu,Home)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(Home).Property(MediaMenu))">SetFocus(50)</onfocus>
		</control>
		<include content="CloseButton">
			<param name="visible">System.Getbool(input.enablemouse) + !Window.IsVisible(1104)</param>
		</include>
		<control type="image">
			<top>-20</top>
			<width>400</width>
			<height>130</height>
			<texture>aeon-nox-logo.png</texture>
		</control>
	</include>
	<include name="CloseButton">
		<control type="button" id="8999">
			<left>360</left>
			<top>-11</top>
			<width>64</width>
			<height>48</height>
			<label></label>
			<font>IconTinyMD</font>
			<textcolor>grey</textcolor>
			<focusedcolor>$VAR[ThemeLabelColor]</focusedcolor>
			<onclick condition="!Window.IsVisible(1104)">ClearProperty(MediaMenu,Home)</onclick>
			<onclick condition="!Window.IsVisible(1104)">SetFocus(50)</onclick>
			<onclick condition="Window.IsVisible(1104)">Dialog.Close(1104)</onclick>
			<texturefocus />
			<texturenofocus />
			<visible>$PARAM[visible]</visible>
		</control>
	</include>
	<include name="KioskModeButton">
		<control type="button">
			<include>ButtonCommonValues</include>
			<label />
			<onfocus>ClearProperty(MediaMenu,Home)</onfocus>
			<onfocus>SetFocus(50)</onfocus>
		</control>
	</include>
	<include name="MediaMenuTop">
		<top>80</top>
		<width>400</width>
		<height>1080</height>
		<onleft>9050</onleft>
		<onright>ClearProperty(MediaMenu,Home)</onright>
		<onright>50</onright>
		<onup>9050</onup>
		<ondown>9957</ondown>
		<onback>ClearProperty(MediaMenu,Home)</onback>
		<onback>50</onback>
		<include condition="Skin.HasSetting(KioskMode.Enabled)">KioskModeButton</include>
		<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(1104)" reversible="true">Conditional</animation>
		<control type="button" id="200">
			<label>31006</label>
			<textwidth>352</textwidth>
			<font>font13_title</font>
			<height>48</height>
			<include>ButtonCommonValues</include>
			<enable>no</enable>
			<disabledcolor>$VAR[ThemeLabelColor]</disabledcolor>
		</control>
		<control type="button" id="2000">
			<description>View As button</description>
			<textwidth>352</textwidth>
			<include>ButtonCommonValues</include>
			<label>$INFO[Container.Viewmode,$LOCALIZE[31100] ]</label>
			<onclick condition="!Skin.HasSetting(skinvariables.viewtypes) | !Window.IsActive(MyVideoNav.xml)">SetProperty(CustomSideMenu,viewselection,Home)</onclick>
			<onclick condition="!Skin.HasSetting(skinvariables.viewtypes) | !Window.IsActive(MyVideoNav.xml)">ActivateWindow(1104)</onclick>
			<onclick condition="Skin.HasSetting(skinvariables.viewtypes) + Window.IsActive(MyVideoNav.xml)">Runscript(script.skinvariables,action=buildviews,contentid=$VAR[SkinVariablesContentIDVar],pluginname=$INFO[Container.PluginName])</onclick>
			<visible>!Window.IsActive(tvchannels)</visible>
		</control>
		<control type="button" id="7031">
			<description>View settings</description>
			<textwidth>352</textwidth>
			<include>ButtonCommonValues</include>
			<label>$INFO[Container.Viewmode,,: $LOCALIZE[5]]</label>
			<onclick condition="Control.IsVisible(50)">SetProperty(actualViewtype,List,Home)</onclick>
			<onclick condition="Control.IsVisible(51)">SetProperty(actualViewtype,InfoWall,Home)</onclick>
			<onclick condition="Control.IsVisible(52)">SetProperty(actualViewtype,Landscape,Home)</onclick>
			<onclick condition="Control.IsVisible(53)">SetProperty(actualViewtype,ShowCase,Home)</onclick>
			<onclick condition="Control.IsVisible(54)">SetProperty(actualViewtype,ShowCaseSquare,Home)</onclick>
			<onclick condition="Control.IsVisible(55)">SetProperty(actualViewtype,TriPanel,Home)</onclick>
			<onclick condition="Control.IsVisible(56)">SetProperty(actualViewtype,Posters,Home)</onclick>
			<onclick condition="Control.IsVisible(57)">SetProperty(actualViewtype,Shift,Home)</onclick>
			<onclick condition="Control.IsVisible(58)">SetProperty(actualViewtype,BannerWall,Home)</onclick>
			<onclick condition="Control.IsVisible(59)">SetProperty(actualViewtype,Logo,Home)</onclick>
			<onclick condition="Control.IsVisible(500)">SetProperty(actualViewtype,Icons,Home)</onclick>
			<onclick condition="Control.IsVisible(501)">SetProperty(actualViewtype,LowList,Home)</onclick>
			<onclick condition="Control.IsVisible(502)">SetProperty(actualViewtype,Episode,Home)</onclick>
			<onclick condition="Control.IsVisible(503)">SetProperty(actualViewtype,Wall,Home)</onclick>
			<onclick condition="Control.IsVisible(504)">SetProperty(actualViewtype,Gallery,Home)</onclick>
			<onclick condition="Control.IsVisible(505)">SetProperty(actualViewtype,Panel,Home)</onclick>
			<onclick condition="Control.IsVisible(506)">SetProperty(actualViewtype,RightList,Home)</onclick>
			<onclick condition="Control.IsVisible(507)">SetProperty(actualViewtype,BigList,Home)</onclick>
			<onclick condition="Control.IsVisible(508)">SetProperty(actualViewtype,SongList,Home)</onclick>
			<onclick condition="Control.IsVisible(509)">SetProperty(actualViewtype,MyFlix,Home)</onclick>
			<onclick condition="Control.IsVisible(512)">SetProperty(actualViewtype,BigFan,Home)</onclick>
			<onclick condition="Control.IsVisible(510)">SetProperty(actualViewtype,FanartList,Home)</onclick>
			<onclick condition="Control.IsVisible(513)">SetProperty(actualViewtype,MusicJukebox,Home)</onclick>
			<onclick condition="Control.IsVisible(511)">SetProperty(actualViewtype,FullscreenWall,Home)</onclick>
			<onclick>SetProperty(CustomSideMenu,viewsettings,Home)</onclick>
			<onclick>ActivateWindow(1104)</onclick>
		</control>
		<control type="button" id="3">
			<description>Sort by button</description>
			<include>ButtonCommonValues</include>
			<label>103</label>
		</control>
		<control type="togglebutton" id="4">
			<description>Sort asc</description>
			<include>ButtonCommonValues</include>
			<label>31051</label>
			<altlabel>31050</altlabel>
			<usealttexture>Container.SortDirection(Ascending)</usealttexture>
		</control>
		<control type="button" id="2001">
			<include>ButtonCommonValues</include>
			<label>$LOCALIZE[33068]</label>
			<onclick>SetProperty(CustomSideMenu,backgroundsettings,Home)</onclick>
			<onclick>ActivateWindow(1104)</onclick>
		</control>
	</include>
	<include name="PVRMediaMenu">
		<control type="group">
			<left>-440</left>
			<include>SideBladeLeft</include>
			<control type="grouplist" id="9050">
				<top>100</top>
				<width>400</width>
				<height>1080</height>
				<onleft>9050</onleft>
				<onright>ClearProperty(MediaMenu,Home)</onright>
				<onright condition="!Window.IsVisible(tvguide) + Control.IsVisible(50)">50</onright>
				<onright condition="!Window.IsVisible(tvguide) + Control.IsVisible(51)">51</onright>
				<onright condition="!Window.IsVisible(tvguide) + Control.IsVisible(52)">52</onright>
				<onright condition="Window.IsVisible(tvguide)">10</onright>
				<onup>9050</onup>
				<ondown condition="Player.HasMedia">9950</ondown>
				<ondown condition="!Player.HasMedia">9050</ondown>
				<onback>ClearProperty(MediaMenu,Home)</onback>
				<onback>50</onback>
				<include condition="Skin.HasSetting(KioskMode.Enabled)">KioskModeButton</include>
				<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(1104)" reversible="true">Conditional</animation>
				<control type="button" id="203">
					<description>Quicknav</description>
					<textwidth>352</textwidth>
					<font>font13_title</font>
					<include>ButtonCommonValues</include>
					<label>31523</label>
					<enable>no</enable>
					<disabledcolor>$VAR[ThemeLabelColor]</disabledcolor>
					<visible>!Skin.HasSetting(Disable.PVRChannels) | !Skin.HasSetting(Disable.PVRGuide) | !Skin.HasSetting(Disable.PVRRecordings) | !Skin.HasSetting(Disable.PVRTimer) | !Skin.HasSetting(Disable.PVRSearch)</visible>
				</control>
				<control type="button" id="100">
					<description>Channels</description>
					<label>19019</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVChannels)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioChannels)</onclick>
					<visible>!Skin.HasSetting(Disable.PVRChannels) + ![Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]</visible>
				</control>
				<control type="button" id="101">
					<description>Guide</description>
					<label>22020</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVGuide)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioGuide)</onclick>
					<visible>![Skin.HasSetting(Disable.PVRGuide) | Window.IsActive(tvguide)]</visible>
				</control>
				<control type="button" id="102">
					<description>Recordings</description>
					<label>19163</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVRecordings)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioRecordings)</onclick>
					<visible>![Skin.HasSetting(Disable.PVRRecordings) | Window.IsActive(tvrecordings)]</visible>
				</control>
				<control type="button" id="103">
					<description>Timers</description>
					<label>19040</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVTimers)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioTimers)</onclick>
					<visible>![Skin.HasSetting(Disable.PVRTimer) | Window.IsActive(tvtimers)]</visible>
				</control>
				<control type="button" id="104">
					<description>Search</description>
					<label>137</label>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVSearch)</onclick>
					<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioSearch)</onclick>
					<visible>![Skin.HasSetting(Disable.PVRSearch) | Window.IsActive(tvsearch)]</visible>
				</control>
				<control type="label" id="200">
					<description>View options</description>
					<width>400</width>
					<height>52</height>
					<textoffsetx>15</textoffsetx>
					<font>font13_title</font>
					<label>31006</label>
					<textcolor>$VAR[ThemeLabelColor]</textcolor>
				</control>
				<control type="button" id="28">
					<description>Channel Groups</description>
					<textwidth>255</textwidth>
					<include>ButtonCommonValues</include>
					<label />
					<visible>Window.IsActive(tvchannels) | Window.IsActive(tvguide)</visible>
				</control>
				<control type="button" id="2">
					<description>View As button</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<visible>!Window.IsActive(tvguide)</visible>
				</control>
				<control type="button" id="3">
					<description>Sort by button</description>
					<include>ButtonCommonValues</include>
					<label>103</label>
				</control>
				<control type="togglebutton" id="4">
					<description>Sort asc</description>
					<include>ButtonCommonValues</include>
					<label>31051</label>
					<altlabel>31050</altlabel>
					<usealttexture>Container.SortDirection(Ascending)</usealttexture>
				</control>
				<control type="radiobutton" id="31">
					<include>ButtonCommonValues</include>
					<label>$LOCALIZE[587]</label>
					<selected>Container.Filtered</selected>
					<visible>Window.IsActive(MyPVRChannels.xml)</visible>
				</control>
				<control type="button" id="2001">
					<include>ButtonCommonValues</include>
					<label>$LOCALIZE[33068]</label>
					<onclick>SetProperty(CustomSideMenu,backgroundsettings,Home)</onclick>
					<onclick>ActivateWindow(1104)</onclick>
				</control>
				<control type="button" id="201">
					<description>View options</description>
					<textwidth>352</textwidth>
					<font>font13_title</font>
					<include>ButtonCommonValues</include>
					<label>31026</label>
					<enable>no</enable>
					<disabledcolor>$VAR[ThemeLabelColor]</disabledcolor>
				</control>
				<control type="button" id="105">
					<description>Watched toggle</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>$INFO[Control.GetLabel(10)]</label>
					<label2>[COLOR $VAR[ThemeLabelColor]]$INFO[Container.NumNonFolderItems][/COLOR]</label2>
					<onclick>SendClick(10)</onclick>
					<visible>Window.IsActive(tvrecordings)</visible>
				</control>
				<control type="button" id="330">
					<description>Settings</description>
					<textwidth>352</textwidth>
					<include>ButtonCommonValues</include>
					<label>$LOCALIZE[31179]</label>
					<onclick>ClearProperty(MediaMenu,Home)</onclick>
					<onclick>SetProperty(DialogSettings,livetv,Home)</onclick>
					<onclick>ActivateWindow(1114)</onclick>
				</control>
			</control>
			<include>MediaMenuPlayerControls</include>
		</control>
		<control type="button" id="10">
			<description>Watched toggle</description>
			<include>HiddenObject</include>
		</control>
	</include>
	<include name="NoMediaMenu">
		<top>100</top>
		<width>400</width>
		<height>1080</height>
		<onleft>9050</onleft>
		<onright>ClearProperty(MediaMenu,Home)</onright>
		<onright condition="!Window.IsActive(skinsettings) + !Window.IsActive(SettingsCategory.xml) + !Window.IsActive(profiles)">50</onright>
		<onright condition="Window.IsActive(SettingsCategory.xml)">3</onright>
		<onright condition="Window.IsActive(profiles)">2</onright>
		<onright condition="Window.IsActive(skinsettings)">9000</onright>
		<onup>9050</onup>
		<ondown condition="Player.HasMedia">9957</ondown>
		<ondown condition="!Player.HasMedia">9050</ondown>
		<onback>ClearProperty(MediaMenu,Home)</onback>
		<onback>50</onback>
		<include condition="Skin.HasSetting(KioskMode.Enabled)">KioskModeButton</include>
		<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(1104)" reversible="true">Conditional</animation>
		<control type="label" id="200">
			<width>400</width>
			<height>52</height>
			<textoffsetx>15</textoffsetx>
			<font>font13_title</font>
			<label>31006</label>
			<textcolor>$VAR[ThemeLabelColor]</textcolor>
		</control>
		<control type="button" id="2001">
			<include>ButtonCommonValues</include>
			<label>$LOCALIZE[33068]</label>
			<onclick>SetProperty(CustomSideMenu,backgroundsettings,Home)</onclick>
			<onclick>ActivateWindow(1104)</onclick>
			<visible>!Window.IsActive(profiles)</visible>
		</control>
		<control type="button" id="2002">
			<include>ButtonCommonValues</include>
			<label>$LOCALIZE[13200]: $LOCALIZE[33068]</label>
			<onclick>Skin.Reset(ItemToEdit.MultiFanart)</onclick>
			<onclick>$VAR[FallbackBackgroundOnclickVar]</onclick>
			<onclick>SetProperty(CustomSelect,fallbackbackground,Home)</onclick>
			<onclick>ActivateWindow(1129)</onclick>
			<visible>Window.IsActive(profiles)</visible>
		</control>
	</include>
	<include name="MediaMenuPlayerControls">
		<control type="grouplist" id="9950">
			<defaultcontrol always="true">9957</defaultcontrol>
			<top>1010</top>
			<left>-15</left>
			<height>80</height>
			<width>440</width>
			<align>center</align>
			<scrolltime tween="sine">200</scrolltime>
			<orientation>horizontal</orientation>
			<onup>9050</onup>
			<itemgap>-25</itemgap>
			<ondown condition="Window.IsActive(SettingsCategory.xml)">2001</ondown>
			<ondown condition="Window.IsActive(profiles)">2002</ondown>
			<ondown condition="!Window.IsActive(profiles) + Control.IsVisible(2000)">2000</ondown>
			<ondown condition="!Window.IsActive(profiles) + Control.IsVisible(28)">28</ondown>
			<ondown condition="!Window.IsActive(profiles) + !Control.IsVisible(28) + Control.IsVisible(3) + !Control.IsVisible(2)">3</ondown>
			<ondown condition="!Window.IsActive(profiles) + !Control.IsVisible(28) + Control.IsVisible(2) + !Control.IsVisible(3) | [Control.IsVisible(2) + Control.IsVisible(3)]">2</ondown>
			<onleft>9950</onleft>
			<onright>9950</onright>
			<onback>ClearProperty(MediaMenu,Home)</onback>
			<onback>50</onback>
			<visible>Player.HasMedia + !String.IsEmpty(Window(Home).Property(MediaMenu)) + !Window.IsVisible(1104)</visible>
			<control type="button" id="9958">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Previous)</onclick>
				<visible>VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="9951">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Previous)</onclick>
				<visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="9952">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Rewind)</onclick>
			</control>
			<control type="button" id="9953">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Stop)</onclick>
				<onclick>ClearProperty(MediaMenu,Home)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="button" id="9957">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>fullscreen</onclick>
			</control>
			<control type="togglebutton" id="9954">
				<texturefocus />
				<alttexturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<altlabel></altlabel>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<onclick>PlayerControl(Play)</onclick>
			</control>
			<control type="button" id="9955">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Forward)</onclick>
			</control>
			<control type="button" id="9956">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Next)</onclick>
				<visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="9959">
				<texturefocus />
				<font>IconMediaMenuButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>80</width>
				<height>80</height>
				<onclick>PlayerControl(Next)</onclick>
				<visible>VideoPlayer.Content(livetv)</visible>
			</control>
		</control>
	</include>
	<!-- Scroll Label -->
	<include name="ScrollOffsetLabel">
		<control type="group">
			<visible>!Container.Content(seasons)</visible>
			<visible>!Control.HasFocus(615)</visible>
			<visible>Container.Scrolling + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]</visible>
			<animation effect="slide" tween="cubic" easing="inout" time="400" start="160" end="0">VisibleChange</animation>
			<left>1794</left>
			<top>36</top>
			<control type="image">
				<width>160</width>
				<height>160</height>
				<texture border="35">listpanel_back.png</texture>
			</control>
			<control type="label">
				<top>15</top>
				<width>160</width>
				<height>120</height>
				<align>center</align>
				<label>$INFO[ListItem.SortLetter]</label>
				<font>font_MainMenu</font>
			</control>
		</control>
	</include>
	<!-- Top Bar -->
	<include name="Topbar">
		<control type="group">
			<animation effect="slide" start="0,-90" end="0,0" time="500">WindowOpen</animation>
			<animation effect="slide" end="0,-90" start="0,0" time="500">WindowClose</animation>
			<animation effect="slide" start="0,0" end="0,-90" time="500" tween="cubic" condition="Control.IsVisible(503) + String.IsEmpty(Skin.String(503.NoTopBar)) + System.IdleTime(2) + !Window.IsVisible(addoninformation) | Control.IsVisible(511) + String.IsEmpty(Skin.String(511.NoTopBar)) + System.IdleTime(2) | Control.IsVisible(511) + String.IsEmpty(Skin.String(511.NoTopBar)) + Control.HasFocus(51160)">Conditional</animation>
			<visible>[Control.IsVisible(50) + String.IsEmpty(Skin.String(50.NoTopBar))] | [Control.IsVisible(51) + String.IsEmpty(Skin.String(51.NoTopBar))] | [Control.IsVisible(52) + String.IsEmpty(Skin.String(52.NoTopBar))] | [Control.IsVisible(53) + String.IsEmpty(Skin.String(53.NoTopBar))] | [Control.IsVisible(54) + String.IsEmpty(Skin.String(54.NoTopBar))] | [Control.IsVisible(55) + String.IsEmpty(Skin.String(55.NoTopBar))] | [Control.IsVisible(56) + String.IsEmpty(Skin.String(56.NoTopBar))] | [Control.IsVisible(57) + String.IsEmpty(Skin.String(57.NoTopBar))] | [Control.IsVisible(58) + String.IsEmpty(Skin.String(58.NoTopBar))] | [Control.IsVisible(59) + String.IsEmpty(Skin.String(59.NoTopBar))] | [Control.IsVisible(500) + String.IsEmpty(Skin.String(500.NoTopBar))] | [Control.IsVisible(501) + String.IsEmpty(Skin.String(501.NoTopBar))] | [Control.IsVisible(502) + String.IsEmpty(Skin.String(502.NoTopBar))] | [Control.IsVisible(503) + String.IsEmpty(Skin.String(503.NoTopBar))] | [Control.IsVisible(504) + String.IsEmpty(Skin.String(504.NoTopBar))] | [Control.IsVisible(505) + String.IsEmpty(Skin.String(505.NoTopBar))] | [Control.IsVisible(507) + String.IsEmpty(Skin.String(507.NoTopBar))] | [Control.IsVisible(508) + String.IsEmpty(Skin.String(508.NoTopBar))] | [Control.IsVisible(512) + String.IsEmpty(Skin.String(512.NoTopBar))] | [Control.IsVisible(592) + String.IsEmpty(Skin.String(592.NoTopBar))] | [Control.IsVisible(510) + String.IsEmpty(Skin.String(510.NoTopBar))] | [Control.IsVisible(513) + String.IsEmpty(Skin.String(513.NoTopBar))] | [Control.IsVisible(511) + String.IsEmpty(Skin.String(511.NoTopBar))] | [Control.IsVisible(506) + String.IsEmpty(Skin.String(506.NoTopBar))] | [Control.IsVisible(509) + String.IsEmpty(Skin.String(509.NoTopBar))] | [Control.IsVisible(513) + String.IsEmpty(Skin.String(513.NoTopBar))] | !Window.IsMedia | Window.IsActive(tvguide)</visible>
			<visible>!Skin.HasSetting(Disable.TopBar)</visible>
			<control type="image">
				<width>100%</width>
				<height>45</height>
				<texture colordiffuse="$VAR[TopBarColor]">colors/white.png</texture>
			</control>
			<control type="image">
				<width>100%</width>
				<top>45</top>
				<height>2</height>
				<texture colordiffuse="$VAR[TopBarGlowBarColor]">colors/white.png</texture>
			</control>
			<control type="group">
				<visible>!Window.IsActive(volumebar)</visible>
				<include>VisibleFadeAnimation</include>
				<control type="group">
					<visible>!Player.HasMedia + ![MusicPlayer.HasNext + [Player.Playing | Player.Paused]]</visible>
					<include>VisibleFadeAnimation</include>
					<control type="label">
						<left>20</left>
						<width>55</width>
						<height>42</height>
						<font>IconMediaMenuButtons</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label>$VAR[BreadcrumbsIconVar]</label>
					</control>
					<control type="grouplist">
						<left>75</left>
						<width>740</width>
						<height>42</height>
						<orientation>horizontal</orientation>
						<control type="label">
							<width>55</width>
							<height>42</height>
							<font>IconMediaMenuButtons</font>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<label></label>
							<visible>String.IsEqual(Control.GetLabel(10),$LOCALIZE[16101])</visible>
						</control>
						<control type="label">
							<width>55</width>
							<height>42</height>
							<font>IconMediaMenuButtons</font>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<label></label>
							<visible>String.IsEqual(Control.GetLabel(10),$LOCALIZE[16102])</visible>
						</control>
						<control type="label">
							<width min="80" max="740">auto</width>
							<height>42</height>
							<font>font14_title</font>
							<textcolor>grey</textcolor>
							<shadowcolor>shadow</shadowcolor>
							<scroll>true</scroll>
							<label>$VAR[BreadcrumbsVar]</label>
						</control>
					</control>
				</control>
				<control type="group">
					<visible>Player.HasMedia</visible>
					<include>VisibleFadeAnimation</include>
					<control type="progress">
						<width>100%</width>
						<height>45</height>
						<texturebg>colors/black75.png</texturebg>
						<midtexture colordiffuse="$VAR[ThemeOSDProgressColor]">colors/white10.png</midtexture>
						<info>Player.ProgressCache</info>
					</control>
					<control type="progress">
						<width>100%</width>
						<height>45</height>
						<texturebg>colors/blank.png</texturebg>
						<midtexture colordiffuse="$VAR[ThemeOSDProgressColor]">colors/grey.png</midtexture>
						<info>Player.Progress</info>
						<visible>!Pvr.IsPlayingTv</visible>
					</control>
					<control type="progress">
						<width>100%</width>
						<height>41</height>
						<texturebg>osd/texturebg_cache.png</texturebg>
						<midtexture colordiffuse="$VAR[ThemeOSDProgressColor]">colors/grey.png</midtexture>
						<info>PVR.EpgEventProgress</info>
						<visible>Pvr.IsPlayingTv</visible>
					</control>
					<control type="label">
						<left>5</left>
						<width>110</width>
						<height>42</height>
						<font>IconMediaMenuButtons</font>
						<textcolor>white</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label>$VAR[PlayerProgressIconVar]</label>
					</control>
					<control type="fadelabel">
						<left>100</left>
						<width>710</width>
						<height>90</height>
						<font>font14_title</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<scroll>true</scroll>
						<scrollspeed>60</scrollspeed>
						<scrollout>false</scrollout>
						<pauseatend>4000</pauseatend>
						<textoffsetx>10</textoffsetx>
						<aligny>top</aligny>
						<label>[COLOR white]$INFO[VideoPlayer.TVShowTitle,, - ]$INFO[MusicPlayer.Artist,, - ]$INFO[Player.Title][/COLOR]</label>
						<label>$VAR[BreadcrumbsVar]</label>
					</control>
				</control>
				<control type="grouplist">
					<width>100%</width>
					<orientation>horizontal</orientation>
					<align>center</align>
					<itemgap>5</itemgap>
					<visible>![String.IsEqual(Container.NumItems,0) | String.IsEmpty(Container.NumItems)]</visible>
					<include>VisibleFadeAnimation</include>
					<control type="label">
						<width>auto</width>
						<height>42</height>
						<font>font14_title</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label>$INFO[Container.NumItems]</label>
					</control>
					<control type="label">
						<width>45</width>
						<height>46</height>
						<font>IconSmallMD</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label></label>
					</control>
					<control type="label">
						<width>auto</width>
						<height>42</height>
						<font>font14_title</font>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label>$INFO[Container.CurrentPage,[COLOR grey2]• ]$INFO[Container.NumPages,/,[/COLOR]]</label>
					</control>
					<control type="label">
						<width>45</width>
						<height>46</height>
						<font>IconSmallMD</font>
						<textcolor>grey2</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<label></label>
					</control>
				</control>
				<control type="label">
					<right>10</right>
					<width>760</width>
					<height>42</height>
					<font>font14_title</font>
					<textcolor>grey</textcolor>
					<shadowcolor>shadow</shadowcolor>
					<align>right</align>
					<label>$VAR[TopBarRightLabelVar]</label>
				</control>
			</control>
			<control type="button" id="90022">
				<left>-27</left>
				<top>5</top>
				<label />
				<texturenofocus colordiffuse="grey">mediamenu_indicator.png</texturenofocus>
				<texturefocus colordiffuse="FFFFFFFF">mediamenu_indicator.png</texturefocus>
				<height>32</height>
				<include>ButtonTopbarCommonvalues</include>
				<visible>!String.IsEmpty(Window(Home).Property(Window.HasSettings))</visible>
			</control>
		</control>
		<control type="button" id="900222">
			<label />
			<onclick condition="String.IsEmpty(Window(Home).Property(MediaMenu))">SetProperty(MediaMenu,True,Home)</onclick>
			<onclick condition="!String.IsEmpty(Window(Home).Property(MediaMenu))">ClearProperty(MediaMenu,Home)</onclick>
			<onfocus condition="String.IsEmpty(Window(Home).Property(MediaMenu)) + Skin.HasSetting(Enable.AutoOpenMediaMenuOnMouseOver)">SetProperty(MediaMenu,True,Home)</onfocus>
			<texturenofocus />
			<texturefocus />
			<width>100</width>
			<height>37</height>
			<include>ButtonTopbarCommonvalues</include>
			<visible>!String.IsEmpty(Window(Home).Property(Window.HasSettings))</visible>
		</control>
	</include>
	<!-- System Panels -->
	<include name="SystemPanel">
		<include content="BackPanel">
			<param name="left">75</param>
			<param name="top">27</param>
			<param name="width">1768</param>
			<param name="height">820</param>
			<param name="texture">colors/black75.png</param>
		</include>
		<control type="image">
			<left>436</left>
			<top>32</top>
			<width>1</width>
			<height>810</height>
			<texture colordiffuse="grey4">colors/white.png</texture>
			<animation effect="slide" end="91" condition="Window.IsActive(profiles)">Conditional</animation>
			<animation effect="slide" end="275" condition="Window.IsActive(script-skinshortcuts.xml) + String.IsEmpty(Window(Home).Property(skinshortcuts-management-widget))">Conditional</animation>
			<animation effect="slide" end="120" condition="Window.IsVisible(1115)">Conditional</animation>
			<visible>!Window.IsVisible(1117)</visible>
		</control>
	</include>
	<include name="SystemLeftPanel">
		<control type="image">
			<left>50</left>
			<width>420</width>
			<height>1020</height>
			<texture border="40" colordiffuse="CC000000">homewidgets/bg_flat.png</texture>
		</control>
	</include>
	<include name="SystemRightPanel">
		<control type="image">
			<left>490</left>
			<width>1380</width>
			<height>1020</height>
			<texture border="40" colordiffuse="CC000000">homewidgets/bg_flat.png</texture>
		</control>
	</include>
	<!-- Auto Complete -->
	<include name="ExtendedInfoAutoComplete">
		<control type="group">
			<animation effect="fade" start="100" end="0" time="300" condition="String.IsEmpty(Container(5000).ListItem.Label)">Conditional</animation>
			<visible>!System.HasHiddenInput</visible>
			<include content="BackPanel">
				<param name="left">-4</param>
				<param name="top">520</param>
				<param name="width">1368</param>
				<param name="height">168</param>
			</include>
			<control type="panel" id="5000">
				<top>524</top>
				<width>1368</width>
				<height>160</height>
				<onleft>5000</onleft>
				<onright>5000</onright>
				<onup>4000</onup>
				<ondown>4000</ondown>
				<onback>noop</onback>
				<scrolltime tween="quadratic" easing="out">200</scrolltime>
				<itemlayout height="80" width="340">
					<control type="label">
						<width>340.5</width>
						<height>80</height>
						<align>center</align>
						<textcolor>grey2</textcolor>
						<font>font15</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout height="80" width="340">
					<control type="image">
						<width>340</width>
						<height>80</height>
						<texture colordiffuse="$VAR[HighlightBarColor]" border="5">colors/white50.png</texture>
						<visible>Control.HasFocus(5000)</visible>
					</control>
					<control type="label">
						<width>340</width>
						<height>80</height>
						<align>center</align>
						<font>font15</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
				<content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).Index(1)]&amp;&amp;limit=8</content>
			</control>
		</control>
	</include>
	<!-- OSD -->
	<include name="DefaultVideoOSD">
		<control type="grouplist" id="202">
			<animation effect="slide" end="0,942" condition="!Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
			<height>100</height>
			<width>100%</width>
			<align>center</align>
			<scrolltime tween="sine">200</scrolltime>
			<orientation>horizontal</orientation>
			<itemgap>20</itemgap>
			<onleft>202</onleft>
			<onright>202</onright>
			<onup>703</onup>
			<ondown>706</ondown>
			<control type="button" id="708">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>SetProperty(CustomSelect,avsettings,Home)</onclick>
				<onclick>ActivateWindow(1129)</onclick>
			</control>
			<control type="button" id="701">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>DialogSelectAudio</onclick>
				<oninfo>ActivateWindow(osdaudiosettings)</oninfo>
				<visible>Integer.IsGreater(VideoPlayer.AudioStreamCount,1)</visible>
			</control>
			<control type="button" id="702">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>DialogSelectVideo</onclick>
				<oninfo>ActivateWindow(osdvideosettings)</oninfo>
				<visible>Integer.IsGreater(VideoPlayer.VideoStreamCount,1)</visible>
			</control>
			<control type="togglebutton" id="703">
				<texturefocus />
				<alttexturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<altlabel></altlabel>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<usealttexture>VideoPlayer.HasSubtitles</usealttexture>
				<onclick condition="!VideoPlayer.HasSubtitles">ActivateWindow(OSDSubtitleSettings)</onclick>
				<onclick condition="VideoPlayer.HasSubtitles">DialogSelectSubtitle</onclick>
				<oninfo>ActivateWindow(SubtitleSearch)</oninfo>
			</control>
			<control type="button" id="600">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Previous)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="601">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick condition="!Player.TempoEnabled">PlayerControl(Rewind)</onclick>
				<onclick condition="Player.TempoEnabled">PlayerControl(tempodown)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="603">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Stop)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="togglebutton" id="602">
				<texturefocus />
				<alttexturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<altlabel></altlabel>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<onclick>PlayerControl(Play)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="604">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick condition="!Player.TempoEnabled">PlayerControl(Forward)</onclick>
				<onclick condition="Player.TempoEnabled">PlayerControl(tempoup)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="605">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Next)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="706">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>Close</onclick>
				<onclick condition="!Window.IsActive(fullscreeninfo)">ActivateWindow(fullscreeninfo)</onclick>
				<onclick condition="Window.IsActive(fullscreeninfo)">Dialog.Close(all,true)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<oninfo>ActivateWindow(fullscreeninfo)</oninfo>
			</control>
			<control type="button" id="700">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>ActivateWindow(videobookmarks)</onclick>
				<oninfo>ActivateWindow(videobookmarks)</oninfo>
			</control>
			<control type="button" id="704">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(ShowVideoMenu)</onclick>
				<oninfo>PlayerControl(ShowVideoMenu)</oninfo>
				<visible>VideoPlayer.HasMenu</visible>
			</control>
			<control type="button" id="705">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>StereoMode</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>VideoPlayer.IsStereoscopic</visible>
			</control>
			<control type="button" id="707">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>Dialog.Close(all,true)</onclick>
				<onclick>SetProperty(Enable.ScreenshotMode,True,Home)</onclick>
				<onclick>Notification($LOCALIZE[19098]:,$LOCALIZE[31329],1500,icon.png)</onclick>
				<onclick>Skin.TimerStart(takescreenshot)</onclick>
				<onclick>Skin.TimerStart(resetscreenshot)</onclick>
				<oninfo>Dialog.Close(all,true)</oninfo>
				<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="button" id="709">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>SetProperty(DialogSettings,videoosd,Home)</onclick>
				<onclick>ActivateWindow(1114)</onclick>
				<oninfo>SetProperty(DialogSettings,videoosd,Home)</oninfo>
				<oninfo>ActivateWindow(1114)</oninfo>
			</control>
		</control>
	</include>
	<include name="PVRVideoOSD">
		<control type="image">
			<left>-5%</left>
			<top>970</top>
			<width>110%</width>
			<height>147</height>
			<texture border="40" colordiffuse="D9FFFFFF">dialogs/default/bg.png</texture>
			<visible>!Skin.HasSetting(VideoOSDOnTop)</visible>
		</control>
		<control type="image">
			<left>-5%</left>
			<top>-30</top>
			<width>110%</width>
			<height>147</height>
			<texture border="40" flipy="true" colordiffuse="D9FFFFFF">dialogs/default/bg.png</texture>
			<visible>Skin.HasSetting(VideoOSDOnTop)</visible>
		</control>
		<control type="grouplist" id="203">
			<animation effect="slide" end="0,-985" condition="Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
			<top>985</top>
			<height>144</height>
			<width>100%</width>
			<align>center</align>
			<scrolltime tween="sine">200</scrolltime>
			<orientation>horizontal</orientation>
			<onup>800</onup>
			<ondown>807</ondown>
			<onleft>203</onleft>
			<onright>203</onright>
			<control type="button" id="800">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>ActivateWindow(osdaudiosettings)</onclick>
			</control>
			<control type="button" id="801">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>ActivateWindow(osdvideosettings)</onclick>
			</control>
			<control type="togglebutton" id="802">
				<texturefocus />
				<alttexturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<altlabel></altlabel>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<usealttexture>VideoPlayer.HasSubtitles</usealttexture>
				<onclick>ActivateWindow(OSDSubtitleSettings)</onclick>
			</control>
			<control type="button" id="814">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>ActivateWindow(Teletext)</onclick>
			</control>
			<control type="button" id="803">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Previous)</onclick>
			</control>
			<control type="button" id="805">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Rewind)</onclick>
				<visible>Player.SeekEnabled</visible>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="807">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Stop)</onclick>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="togglebutton" id="806">
				<texturefocus />
				<alttexturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<altlabel></altlabel>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<onclick>PlayerControl(Play)</onclick>
				<visible>Player.PauseEnabled</visible>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="808">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Forward)</onclick>
				<visible>Player.SeekEnabled</visible>
				<visible>!Skin.HasSetting(Disable.PlayerControlButtons)</visible>
			</control>
			<control type="button" id="804">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PlayerControl(Next)</onclick>
			</control>
			<control type="togglebutton" id="809">
				<texturefocus />
				<alttexturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<altlabel></altlabel>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>PVR.ToggleRecordPlayingChannel</onclick>
				<visible>PVR.CanRecordPlayingChannel</visible>
				<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
			</control>
			<control type="button" id="810">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>Dialog.Close(VideoOSD)</onclick>
				<onclick>ActivateWindow(PVROSDChannels)</onclick>
			</control>
			<control type="button" id="811">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>Dialog.Close(VideoOSD)</onclick>
				<onclick>ActivateWindow(pvrchannelguide)</onclick>
			</control>
			<control type="button" id="812">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>ToggleStereoMode</onclick>
				<visible>VideoPlayer.IsStereoscopic</visible>
			</control>
			<control type="button" id="813">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>Dialog.Close(VideoOSD)</onclick>
				<onclick>ActivateWindow(TVGuide)</onclick>
			</control>
			<control type="button" id="815">
				<texturefocus />
				<font>IconOSDButtons</font>
				<label></label>
				<focusedcolor>$VAR[FocusedOSDButtonsColor]</focusedcolor>
				<textcolor>$VAR[UnfocusedOSDButtonsColor]</textcolor>
				<shadowcolor>shadow</shadowcolor>
				<width>100</width>
				<height>100</height>
				<onclick>SetProperty(DialogSettings,videoosd,Home)</onclick>
				<onclick>ActivateWindow(1114)</onclick>
				<oninfo>SetProperty(DialogSettings,videoosd,Home)</oninfo>
				<oninfo>ActivateWindow(1114)</oninfo>
			</control>
		</control>
	</include>
	<!-- Seekbar -->
	<include name="DefaultSeekbar">
		<control type="group">
			<visible>![Player.Paused + Skin.HasSetting(CleanPauseScreen) + !Window.IsActive(fullscreeninfo)]</visible>
			<animation effect="fade" start="0" end="100" time="250">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="!Skin.HasSetting(CleanPauseScreen)">WindowClose</animation>
			<control type="group">
				<top>1014</top>
				<visible>!Window.IsVisible(SliderDialog)</visible>
				<include>VisibleFadeAnimation</include>
				<control type="group">
					<animation effect="slide" end="0,-90" time="200" tween="quadratic" condition="Window.IsActive(videoosd) + !Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
					<animation effect="slide" end="0,90" time="200" tween="quadratic" condition="!Skin.HasSetting(VideoOSDOnTop) + [Window.IsVisible(SliderDialog) | Window.IsVisible(pvrchannelguide) | Window.IsVisible(PVROSDTeletext) | Window.IsVisible(PVROSDChannels) | Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(OSDSubtitleSettings) | Window.IsVisible(VideoBookmarks) | Window.IsVisible(SubtitleSearch) | Window.IsVisible(1114)]">Conditional</animation>
					<control type="image">
						<width>100%</width>
						<height>160</height>
						<texture border="1,32,1,1">bottombar.png</texture>
					</control>
				</control>
				<control type="group">
					<top>20</top>
					<control type="progress">
						<width>100%</width>
						<height>46</height>
						<info>Player.ProgressCache</info>
						<midtexture>colors/white25.png</midtexture>
					</control>
					<control type="progress">
						<width>100%</width>
						<height>46</height>
						<texturebg>colors/blank.png</texturebg>
						<midtexture colordiffuse="$VAR[ThemeOSDProgressColor]">colors/grey.png</midtexture>
						<info>Player.Progress</info>
					</control>
				</control>
				<control type="slider" id="401">
					<top>20</top>
					<width>100%</width>
					<height>28</height>
					<texturesliderbar>seekslider.png</texturesliderbar>
					<textureslidernib colordiffuse="$VAR[ThemeOSDProgressColor]">slidernib_alt.png</textureslidernib>
					<textureslidernibfocus colordiffuse="$VAR[ThemeOSDProgressColor]">slidernib_alt.png</textureslidernibfocus>
					<visible>Player.Seeking</visible>
				</control>
				<control type="group">
					<top>20</top>
					<animation effect="fade" start="100" end="50" time="200" condition="Player.Seeking">Conditional</animation>
					<control type="label">
						<width>830</width>
						<height>90</height>
						<font>font14_title</font>
						<textoffsetx>15</textoffsetx>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<aligny>top</aligny>
						<label>$VAR[PlayerTitleLabelVar]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<left>1020</left>
						<width>900</width>
						<height>90</height>
						<font>font14_title</font>
						<textoffsetx>15</textoffsetx>
						<textcolor>grey</textcolor>
						<shadowcolor>shadow</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<label>$VAR[OSDRightLabelVar]</label>
					</control>
				</control>
				<control type="label">
					<top>20</top>
					<width>100%</width>
					<height>90</height>
					<font>font14_title</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>grey</textcolor>
					<shadowcolor>shadow</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<label>$VAR[SeekLabelVar]</label>
				</control>
				<control type="ranges">
					<top>56</top>
					<width>100%</width>
					<height>10</height>
					<texturebg border="2">colors/blank.png</texturebg>
					<lefttexture>colors/white.png</lefttexture>
					<midtexture colordiffuse="red">colors/white.png</midtexture>
					<righttexture>colors/white.png</righttexture>
					<info>Player.Editlist</info>
				</control>
				<control type="ranges">
					<top>58</top>
					<width>100%</width>
					<height>8</height>
					<texturebg border="2">colors/blank.png</texturebg>
					<righttexture colordiffuse="red">colors/white.png</righttexture>
					<info>Player.Cuts</info>
				</control>
				<control type="ranges">
					<top>62</top>
					<width>100%</width>
					<height>4</height>
					<texturebg border="2">colors/blank.png</texturebg>
					<righttexture>colors/white.png</righttexture>
					<info>Player.SceneMarkers</info>
				</control>
				<control type="ranges">
					<top>62</top>
					<width>100%</width>
					<height>4</height>
					<texturebg border="2">colors/blank.png</texturebg>
					<righttexture>colors/white.png</righttexture>
					<info>Player.Chapters</info>
				</control>
				<control type="image">
					<left>1460</left>
					<top>-244</top>
					<width>450</width>
					<height>260</height>
					<aspectratio aligny="bottom" align="center">keep</aspectratio>
					<texture background="true">$VAR[PlayerArtworkVar]</texture>
					<visible>![Window.IsVisible(DialogSettings.xml) | Window.IsVisible(subtitlesearch) | Window.IsVisible(1114) | Window.IsVisible(fullscreeninfo)]</visible>
					<animation effect="slide" end="0,-90" time="240" tween="quadratic" condition="Window.IsActive(videoosd) + !Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
				</control>
			</control>
			<control type="group">
				<top>447</top>
				<include>VisibleFadeAnimation</include>
				<visible>Player.Paused + !System.HasVisibleModalDialog</visible>
				<control type="group">
					<left>867</left>
					<width>186</width>
					<height>186</height>
					<visible>!Skin.HasSetting(PausedLabel)</visible>
					<control type="image">
						<texture>osd/bg_play_large.png</texture>
					</control>
					<control type="image">
						<texture>osd/btn_pause.png</texture>
					</control>
				</control>
				<control type="label">
					<width>100%</width>
					<height>184</height>
					<align>center</align>
					<label>[UPPERCASE][B]$LOCALIZE[112][/B][/UPPERCASE]</label>
					<font>BigAssTimeFont</font>
					<textcolor>B3FFFFFF</textcolor>
					<visible>Skin.HasSetting(PausedLabel)</visible>
				</control>
			</control>
		</control>
	</include>
	<!-- InfoPanel -->
	<include name="InfoPanel">
		<control type="group">
			<visible>!String.IsEmpty(Control.GetLabel(4420)) + Control.IsVisible(4420)</visible>
			<visible>!String.IsEqual(Control.GetLabel(4420),5) + !String.IsEqual(Control.GetLabel(4420),6)</visible>
			<visible>!Skin.HasSetting(Enable.ManualInfoPanel) | [Skin.HasSetting(Enable.ManualInfoPanel) + Control.HasFocus(4401)]</visible>
			<animation effect="slide" start="0,-1080" end="0,0" time="840" tween="cubic">Visible</animation>
			<animation effect="slide" start="0,0" end="0,-1080" time="720" tween="cubic">Hidden</animation>
			<animation effect="slide" start="0,-1200" end="0,0" time="720" tween="cubic">WindowOpen</animation>
			<animation effect="slide" end="0,-1200" start="0,0" time="720" tween="cubic">WindowClose</animation>
			<animation effect="slide" start="0,0" end="0,218" condition="[Control.IsVisible(57) + Skin.HasSetting(Enable.Shift.Small)] | Control.IsVisible(59)">Conditional</animation>
			<animation effect="slide" start="0,0" end="-60,20" condition="Control.IsVisible(57) + Skin.HasSetting(Enable.Shift.Small)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,20" time="720" tween="cubic" condition="Control.IsVisible(52)">Conditional</animation>
			<animation effect="slide" start="0,0" end="-5,30" time="720" tween="cubic" condition="Control.IsVisible(58)">Conditional</animation>
			<top>5</top>
			<include content="BackInfoPanel">
				<param name="left">90</param>
				<param name="top">130</param>
				<param name="width">1740</param>
				<param name="height">800</param>
				<param name="visible">!Control.IsVisible(57)</param>
			</include>
			<include content="BackInfoPanel">
				<param name="left">420</param>
				<param name="top">60</param>
				<param name="width">1500</param>
				<param name="height">842</param>
				<param name="visible">Control.IsVisible(57) + !Skin.HasSetting(Enable.Shift.Small)</param>
			</include>
			<include content="BackInfoPanel">
				<param name="left">350</param>
				<param name="top">60</param>
				<param name="width">1620</param>
				<param name="height">842</param>
				<param name="visible">Control.IsVisible(57) + Skin.HasSetting(Enable.Shift.Small)</param>
			</include>
			<control type="group">
				<visible>![Container.OnNext | Container.OnPrevious]</visible>
				<include>ViewAnimation</include>
				<control type="group">
					<visible>String.IsEqual(Control.GetLabel(4420),1) | String.IsEqual(Control.GetLabel(4420),2)</visible>
					<include>SettingsFadeAnimation</include>
					<control type="grouplist">
						<left>120</left>
						<top>150</top>
						<height>300</height>
						<include content="InfoPanelLabel">
							<param name="width">560</param>
							<param name="max_width">500</param>
							<param name="icon">$VAR[InfoPanelLabel1IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel1Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">560</param>
							<param name="max_width">500</param>
							<param name="icon">$VAR[InfoPanelLabel2IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel2Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">960</param>
							<param name="max_width">900</param>
							<param name="icon"></param>
							<param name="label">$VAR[VideoGenreVar]</param>
							<param name="visible">String.IsEqual(Control.GetLabel(4420),1)</param>
						</include>
						<control type="grouplist">
							<width>400</width>
							<height>120</height>
							<visible>String.IsEqual(Control.GetLabel(4420),2)</visible>
							<include content="InfoPanelLabel">
								<param name="width">510</param>
								<param name="max_width">450</param>
								<param name="icon">$VAR[InfoPanelLabel3IconVar]</param>
								<param name="label">$VAR[InfoPanelLabel3Var]</param>
							</include>
							<include content="InfoPanelLabel">
								<param name="width">510</param>
								<param name="max_width">450</param>
								<param name="icon">$VAR[InfoPanelLabel4IconVar]</param>
								<param name="label">$VAR[InfoPanelLabel4Var]</param>
							</include>
						</control>
						<include content="InfoPanelLabel">
							<param name="visible">String.IsEqual(Control.GetLabel(4420),2)</param>
							<param name="width">960</param>
							<param name="max_width">900</param>
							<param name="icon"></param>
							<param name="label">$VAR[VideoGenreVar]</param>
						</include>
					</control>
					<control type="grouplist">
						<left>700</left>
						<top>150</top>
						<width>510</width>
						<height>120</height>
						<visible>String.IsEqual(Control.GetLabel(4420),1)</visible>
						<include content="InfoPanelLabel">
							<param name="width">510</param>
							<param name="max_width">450</param>
							<param name="icon">$VAR[InfoPanelLabel3IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel3Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">510</param>
							<param name="max_width">450</param>
							<param name="icon">$VAR[InfoPanelLabel4IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel4Var]</param>
						</include>
					</control>
					<control type="textbox">
						<top>334</top>
						<left>136</left>
						<width>970</width>
						<height>196</height>
						<align>justify</align>
						<font>font14_textbox</font>
						<textcolor>grey</textcolor>
						<label>$VAR[VideoPlotVar]</label>
						<pagecontrol>62</pagecontrol>
						<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll) + !Control.HasFocus(62)</autoscroll>
						<visible>String.IsEqual(Control.GetLabel(4420),1)</visible>
					</control>
					<control type="textbox">
						<left>700</left>
						<label>$VAR[VideoPlotVar]</label>
						<top>160</top>
						<width>830</width>
						<height>196</height>
						<align>justify</align>
						<font>font14_textbox</font>
						<textcolor>grey</textcolor>
						<pagecontrol>62</pagecontrol>
						<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll) + !Control.HasFocus(62)</autoscroll>
						<visible>String.IsEqual(Control.GetLabel(4420),2)</visible>
					</control>
					<control type="image">
						<left>1126</left>
						<top>162</top>
						<width>673</width>
						<height>360</height>
						<fadetime>200</fadetime>
						<texture border="2" background="true">$VAR[GlobalBackgroundVar]</texture>
						<bordersize>2</bordersize>
						<bordertexture border="2" infill="false">colors/black.png</bordertexture>
						<visible>String.IsEqual(Control.GetLabel(4420),1)</visible>
					</control>
					<control type="image">
						<left>1160</left>
						<top>162</top>
						<width>640</width>
						<height>360</height>
						<fadetime>200</fadetime>
						<aspectratio align="right">keep</aspectratio>
						<texture border="2" background="true">$VAR[PosterThumbVar]</texture>
						<bordersize>2</bordersize>
						<bordertexture border="2" infill="false">colors/black.png</bordertexture>
						<visible>String.IsEqual(Control.GetLabel(4420),2)</visible>
					</control>
					<control type="scrollbar" id="62">
						<top>342</top>
						<left>1112</left>
						<width>14</width>
						<height>179</height>
						<onup>SetProperty(MediaMenu,True,Home)</onup>
						<onup>SetFocus(9050)</onup>
						<onleft>50</onleft>
						<onright>50</onright>
						<ondown>50</ondown>
						<texturesliderbackground colordiffuse="1AFFFFFF">colors/white50.png</texturesliderbackground>
						<texturesliderbar colordiffuse="1AFFFFFF">colors/white.png</texturesliderbar>
						<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
						<showonepage>false</showonepage>
					</control>
				</control>
				<control type="group">
					<visible>[String.IsEqual(Control.GetLabel(4420),3) | String.IsEqual(Control.GetLabel(4420),4)] + Control.IsVisible(57)</visible>
					<include>VisibleFadeAnimation</include>
					<control type="group">
						<left>460</left>
						<top>80</top>
						<height>120</height>
						<control type="grouplist">
							<width>860</width>
							<height>120</height>
							<animation effect="slide" end="-60" condition="Skin.HasSetting(Enable.Shift.Small)">Conditional</animation>
							<include content="InfoPanelLabel">
								<param name="width">860</param>
								<param name="max_width">800</param>
								<param name="icon"></param>
								<param name="label">$VAR[InfoPanelTaglineLabelVar]</param>
								<param name="visible">!String.IsEmpty(ListItem.Tagline) | !String.IsEmpty(Container(4500).ListItem.Tagline)</param>
							</include>
							<include content="InfoPanelLabel">
								<param name="width">860</param>
								<param name="max_width">800</param>
								<param name="icon">$VAR[InfoPanelLabel2IconVar]</param>
								<param name="label">$VAR[InfoPanelLabel2Var]</param>
							</include>
						</control>
					</control>
					<control type="group">
						<visible>String.IsEqual(Control.GetLabel(4420),3)</visible>
						<control type="textbox">
							<left>475</left>
							<top>220</top>
							<width>830</width>
							<height>196</height>
							<textcolor>grey</textcolor>
							<font>font14_textbox</font>
							<align>justify</align>
							<label>$VAR[VideoPlotVar]</label>
							<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
							<animation effect="slide" end="-60" condition="Skin.HasSetting(Enable.Shift.Small)">Conditional</animation>
						</control>
						<control type="image">
							<right>30</right>
							<top>92</top>
							<width>540</width>
							<height>330</height>
							<fadetime>200</fadetime>
							<texture border="2" background="true">$VAR[GlobalBackgroundVar]</texture>
							<bordersize>2</bordersize>
							<bordertexture border="2" infill="false">colors/black.png</bordertexture>
							<animation effect="slide" end="30" condition="Skin.HasSetting(Enable.Shift.Small)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<visible>String.IsEqual(Control.GetLabel(4420),4)</visible>
						<control type="textbox">
							<left>460</left>
							<top>220</top>
							<width>1150</width>
							<height>200</height>
							<textcolor>grey</textcolor>
							<font>font14_textbox</font>
							<align>justify</align>
							<label>$VAR[VideoPlotVar]</label>
							<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
							<animation effect="slide" end="-60" condition="Skin.HasSetting(Enable.Shift.Small)">Conditional</animation>
						</control>
						<control type="image">
							<right>40</right>
							<top>91</top>
							<width>240</width>
							<height>340</height>
							<fadetime>200</fadetime>
							<texture border="2" background="true">$VAR[PosterThumbVar]</texture>
							<bordersize>2</bordersize>
							<bordertexture border="2" infill="false">colors/black.png</bordertexture>
							<animation effect="slide" end="40" condition="Skin.HasSetting(Enable.Shift.Small)">Conditional</animation>
						</control>
					</control>
				</control>
			</control>
		</control>
		<control type="group">
			<include content="DimBackground">
				<param name="visible">!Skin.HasSetting(Enable.ManualInfoPanel) + [String.IsEqual(Control.GetLabel(4420),5) | String.IsEqual(Control.GetLabel(4420),6)] | [Skin.HasSetting(Enable.ManualInfoPanel) + Control.HasFocus(4401) + [String.IsEqual(Control.GetLabel(4420),5) | String.IsEqual(Control.GetLabel(4420),6)]]</param>
			</include>
			<control type="group">
				<visible>!Skin.HasSetting(Enable.ManualInfoPanel) + Control.IsVisible(4420) + [String.IsEqual(Control.GetLabel(4420),5) | String.IsEqual(Control.GetLabel(4420),6)] | [Skin.HasSetting(Enable.ManualInfoPanel) + Control.HasFocus(4401) + [String.IsEqual(Control.GetLabel(4420),5) | String.IsEqual(Control.GetLabel(4420),6)]]</visible>
				<animation effect="slide" start="0,-1080" end="0,0" time="840" tween="cubic">Visible</animation>
				<animation effect="slide" start="0,0" end="0,-1080" time="720" tween="cubic">Hidden</animation>
				<animation effect="slide" start="0,-1200" end="0,0" time="720" tween="cubic">WindowOpen</animation>
				<animation effect="slide" end="0,-1200" start="0,0" time="720" tween="cubic">WindowClose</animation>
				<control type="group">
					<visible>String.IsEqual(Control.GetLabel(4420),5)</visible>
					<include>VisibleFadeAnimation</include>
					<control type="grouplist">
						<left>20</left>
						<top>80</top>
						<include content="InfoPanelLabel">
							<param name="width">710</param>
							<param name="max_width">650</param>
							<param name="icon">$VAR[InfoPanelLabel1IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel1Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">710</param>
							<param name="max_width">650</param>
							<param name="icon">$VAR[InfoPanelLabel2IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel2Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">960</param>
							<param name="max_width">900</param>
							<param name="icon"></param>
							<param name="label">$VAR[VideoGenreVar]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">960</param>
							<param name="max_width">900</param>
							<param name="icon"></param>
							<param name="label">$VAR[InfoPanelTaglineLabelVar]</param>
						</include>
					</control>
					<control type="grouplist">
						<left>760</left>
						<top>80</top>
						<width>510</width>
						<height>180</height>
						<include content="InfoPanelLabel">
							<param name="width">510</param>
							<param name="max_width">450</param>
							<param name="icon">$VAR[InfoPanelLabel3IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel3Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">510</param>
							<param name="max_width">450</param>
							<param name="icon">$VAR[InfoPanelLabel4IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel4Var]</param>
						</include>
					</control>
					<control type="textbox">
						<top>330</top>
						<left>20</left>
						<width>1090</width>
						<height>148</height>
						<align>justify</align>
						<textcolor>grey</textcolor>
						<font>font14_textbox</font>
						<label>$VAR[VideoPlotVar]</label>
						<autoscroll time="3000" delay="4000" repeat="5000">true</autoscroll>
					</control>
					<control type="image">
						<left>1132</left>
						<top>71</top>
						<width>768</width>
						<height>415</height>
						<fadetime>200</fadetime>
						<texture background="true">$VAR[GlobalBackgroundVar]</texture>
						<aspectratio scalediffuse="false" aligny="center">scale</aspectratio>
						<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEqual(Control.GetLabel(4420),6)</visible>
					<include>VisibleFadeAnimation</include>
					<control type="grouplist">
						<left>20</left>
						<top>80</top>
						<include content="InfoPanelLabel">
							<param name="width">860</param>
							<param name="max_width">800</param>
							<param name="icon">$VAR[InfoPanelLabel1IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel1Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">860</param>
							<param name="max_width">800</param>
							<param name="icon">$VAR[InfoPanelLabel2IconVar]</param>
							<param name="label">$VAR[InfoPanelLabel2Var]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">860</param>
							<param name="max_width">800</param>
							<param name="icon"></param>
							<param name="label">$VAR[VideoGenreVar]</param>
						</include>
						<include content="InfoPanelLabel">
							<param name="width">860</param>
							<param name="max_width">800</param>
							<param name="icon"></param>
							<param name="label">$VAR[InfoPanelTaglineLabelVar]</param>
						</include>
						<control type="grouplist">
							<width>860</width>
							<height>60</height>
							<orientation>horizontal</orientation>
							<include content="InfoPanelLabel">
								<param name="width">500</param>
								<param name="max_width">440</param>
								<param name="icon">$VAR[InfoPanelLabel3IconVar]</param>
								<param name="label">$VAR[InfoPanelLabel3Var]</param>
							</include>
							<include content="InfoPanelLabel">
								<param name="width">360</param>
								<param name="max_width">300</param>
								<param name="icon">$VAR[InfoPanelLabel4IconVar]</param>
								<param name="label">$VAR[InfoPanelLabel4Var]</param>
							</include>
						</control>
					</control>
					<control type="textbox">
						<top>88</top>
						<left>920</left>
						<width>700</width>
						<height>345</height>
						<align>justify</align>
						<textcolor>grey</textcolor>
						<font>font14_textbox</font>
						<label>$VAR[VideoPlotVar]</label>
						<autoscroll time="3000" delay="4000" repeat="5000">true</autoscroll>
					</control>
					<control type="image">
						<right>0</right>
						<top>71</top>
						<width>278</width>
						<height>380</height>
						<fadetime>200</fadetime>
						<texture background="true">$VAR[PosterThumbVar]</texture>
						<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- InfoPopup -->
	<include name="InfoPopup">
		<control type="group">
			<visible>!ListItem.IsParentFolder</visible>
			<visible>[Control.IsVisible(58) + Control.HasFocus(58) + Skin.HasSetting(Enable.BannerWallInfoPopup)] | [Control.IsVisible(500) + Control.HasFocus(500) + Skin.HasSetting(Enable.IconsInfoPopup)] | [Control.IsVisible(506) + Control.HasFocus(506) + Skin.HasSetting(inforightlist) + Skin.HasSetting(Enable.RightListInfoPopup)] | [Control.IsVisible(511) + Control.HasFocus(511) + Skin.HasSetting(Enable.FullscreenWallInfoPopup)]</visible>
			<control type="image">
				<include>FullscreenDimensions</include>
				<texture>colors/black50.png</texture>
				<visible>[String.IsEqual(Skin.String(InfoPopup.Delay),2) + System.IdleTime(2) | String.IsEqual(Skin.String(InfoPopup.Delay),3) + System.IdleTime(3) | String.IsEqual(Skin.String(InfoPopup.Delay),4) + System.IdleTime(4) | String.IsEqual(Skin.String(InfoPopup.Delay),5) + System.IdleTime(5)] + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(sets)]</visible>
			</control>
			<control type="group">
				<top>254</top>
				<left>300</left>
				<animation type="Visible" reversible="false">
					<effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="back" time="240" />
					<effect type="fade" delay="160" end="100" time="240" />
				</animation>
				<visible>[String.IsEqual(Skin.String(InfoPopup.Delay),2) + System.IdleTime(2) | String.IsEqual(Skin.String(InfoPopup.Delay),3) + System.IdleTime(3) | String.IsEqual(Skin.String(InfoPopup.Delay),4) + System.IdleTime(4) | String.IsEqual(Skin.String(InfoPopup.Delay),5) + System.IdleTime(5)] + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(sets)]</visible>
				<control type="image">
					<top>2</top>
					<left>22</left>
					<width>1280</width>
					<height>568</height>
					<texture border="40">listpanel_back.png</texture>
				</control>
				<control type="image">
					<top>40</top>
					<left>396</left>
					<width>1200</width>
					<height>110</height>
					<aspectratio align="left">keep</aspectratio>
					<texture background="true">$VAR[ArtworkLogoVar]</texture>
				</control>
				<control type="label">
					<top>40</top>
					<left>397</left>
					<width>865</width>
					<height>80</height>
					<font>font30_title_bold</font>
					<textcolor>grey</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
					<visible>String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(ListItem.Art(tvshow.clearlogo))</visible>
				</control>
				<control type="group">
					<left>397</left>
					<top>160</top>
					<width>900</width>
					<height>120</height>
					<control type="grouplist">
						<visible>[Container.Content(movies) | Container.Content(episodes)] + !ListItem.IsCollection</visible>
						<!-- <control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Tagline)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>$VAR[ThemeLabelColor]</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Tagline]</label>
								<scroll>true</scroll>
							</control>
						</control> -->
						<control type="group">
							<height>40</height>
							<visible>Container.Content(episodes)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Label,$LOCALIZE[20359] ]</label>
								<scroll>true</scroll>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Director)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Director]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!Container.Content(episodes) + !String.IsEmpty(ListItem.Genre)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Genre]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Year]$INFO[ListItem.RatingAndVotes, • ]$VAR[DurationVar, • ]$INFO[ListItem.EndTimeResume, • $LOCALIZE[31393]: ]</label>
							</control>
						</control>
					</control>
					<control type="grouplist">
						<visible>ListItem.IsCollection</visible>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(Container(4501).ListItem.Property(director.collection)) | !String.IsEmpty(Container(4500).ListItem(0).Director)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[VideoDirectorVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(Container(4501).ListItem.Property(genre.collection)) | !String.IsEmpty(Container(4500).ListItem(0).Genre)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[VideoGenreVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>860</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[Container(4500).ListItem(0).Year]$INFO[Container(4500).ListItem(-1).Year, - ]$INFO[Container(4500).NumItems, • , $LOCALIZE[342]]$INFO[ListItem.RatingAndVotes, • ]$INFO[Window(Home).Property(SkinInfo.Set.Movies.Runtime), • , $LOCALIZE[12391]]</label>
							</control>
						</control>
					</control>
					<control type="grouplist">
						<visible>Container.Content(tvshows)</visible>
						<control type="group">
							<visible>!Skin.HasSetting(Disable.NextAired)</visible>
							<visible>!String.IsEmpty(Container(9143).ListItem.Status) | !String.IsEmpty(ListItem.Status)</visible>
							<height>40</height>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>45</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>$VAR[ThemeLabelColor]</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[TVShowStatusLabelVar]</label>
							</control>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(Disable.NextAired)</visible>
							<visible>!String.IsEmpty(Container(9143).ListItem.Property(Next_Aired)) | !String.IsEmpty(Container(9143).ListItem.Property(Last_Aired))</visible>
							<height>40</height>
							<control type="togglebutton">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<include>NoFocusObject</include>
								<label></label>
								<altlabel></altlabel>
								<usealttexture>String.IsEmpty(Container(9143).ListItem.Property(Next_Aired))</usealttexture>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$VAR[NextAiredLabelVar]</label>
							</control>
						</control>
						<control type="group">
							<height>40</height>
							<visible>!String.IsEmpty(ListItem.Genre)</visible>
							<control type="label">
								<left>5</left>
								<width>60</width>
								<height>40</height>
								<font>IconSmallMD</font>
								<label></label>
							</control>
							<control type="label">
								<left>40</left>
								<width>815</width>
								<height>40</height>
								<textcolor>grey</textcolor>
								<shadowcolor>shadow</shadowcolor>
								<include>DefaultButtonsValues</include>
								<label>$INFO[ListItem.Genre]</label>
							</control>
						</control>
					</control>
				</control>
				<control type="textbox">
					<top>290</top>
					<left>397</left>
					<width>870</width>
					<height>175</height>
					<font>font14_textbox2</font>
					<textcolor>grey</textcolor>
					<label>$VAR[VideoPlotVar]</label>
					<autoscroll delay="4000" time="3000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					<visible>!ListItem.IsCollection</visible>
				</control>
				<control type="textbox">
					<top>290</top>
					<left>397</left>
					<width>870</width>
					<height>255</height>
					<font>font14_textbox2</font>
					<textcolor>grey</textcolor>
					<label>$VAR[VideoPlotVar]</label>
					<autoscroll delay="4000" time="3000" repeat="4000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					<visible>ListItem.IsCollection</visible>
				</control>
				<!-- Movie + Episode Flags -->
				<control type="grouplist">
					<top>470</top>
					<left>397</left>
					<width>889</width>
					<height>78</height>
					<orientation>horizontal</orientation>
					<visible>Container.Content(movies) | Container.Content(episodes)</visible>
					<control type="image">
						<width>148</width>
						<include>MediaFlagValues</include>
						<texture>$VAR[MediaFlagsPathVar]/resolution/$INFO[ListItem.VideoResolution,,.png]</texture>
						<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					</control>
					<control type="image">
						<width>148</width>
						<include>MediaFlagValues</include>
						<texture>$VAR[MediaFlagsPathVar]/$VAR[HDRFlagsVar]</texture>
						<visible>!String.IsEmpty(ListItem.HdrType)</visible>
					</control>
					<control type="image">
						<width>148</width>
						<include>MediaFlagValues</include>
						<texture>$VAR[MediaFlagsPathVar]/videocodec/$VAR[SourceFlagVar]</texture>
						<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					</control>
					<control type="image">
						<width>148</width>
						<include>MediaFlagValues</include>
						<texture>$VAR[MediaFlagsPathVar]/aspectratio/$INFO[ListItem.VideoAspect,,.png]</texture>
						<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
					</control>
					<control type="image">
						<width>148</width>
						<include>MediaFlagValues</include>
						<texture>$VAR[MediaFlagsPathVar]/audiocodec/$VAR[AudioCodecFlagVar]</texture>
						<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					</control>
					<control type="image">
						<width>148</width>
						<include>MediaFlagValues</include>
						<texture>$VAR[MediaFlagsPathVar]/audiochannels/$INFO[ListItem.AudioChannels,,.png]</texture>
						<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					</control>
				</control>
				<!-- TV Flags -->
				<control type="grouplist">
					<top>470</top>
					<left>397</left>
					<width>889</width>
					<height>78</height>
					<orientation>horizontal</orientation>
					<visible>Container.Content(tvshows)</visible>
					<control type="group">
						<width>170</width>
						<control type="image" id="9099">
							<include>MediaFlagValues</include>
							<texture>$VAR[PathFlagsStudios]$INFO[ListItem.Studio,,.png]</texture>
							<visible>!String.IsEmpty(ListItem.Studio)</visible>
						</control>
						<control type="label">
							<width>170</width>
							<align>center</align>
							<font>font10</font>
							<label>$INFO[ListItem.Studio]</label>
							<visible>String.IsEmpty(Control.GetLabel(9099))</visible>
						</control>
					</control>
					<control type="image">
						<colordiffuse>grey</colordiffuse>
						<include>MediaFlagValues</include>
						<texture fallback="flags/default/mpaa/NR.png">$VAR[MediaFlagsPathVar]/mpaa/$VAR[RatingFlagVar]</texture>
					</control>
					<control type="group">
						<visible>!String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
						<width>170</width>
						<control type="label">
							<top>2</top>
							<width>170</width>
							<height>60</height>
							<align>center</align>
							<label>$INFO[ListItem.Property(TotalSeasons)]</label>
							<font>font48_bold</font>
							<wrapmultiline>true</wrapmultiline>
							<textcolor>grey</textcolor>
						</control>
						<control type="label">
							<top>52</top>
							<width>170</width>
							<height>30</height>
							<align>center</align>
							<label>[LOWERCASE]$VAR[OneOrMoreSeasonsVar][/LOWERCASE]</label>
							<font>font12</font>
							<textcolor>grey</textcolor>
						</control>
					</control>
					<control type="group">
						<visible>!String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
						<width>170</width>
						<control type="label">
							<top>2</top>
							<width>170</width>
							<height>60</height>
							<align>center</align>
							<label>$INFO[ListItem.Property(TotalEpisodes)]</label>
							<font>font48_bold</font>
							<wrapmultiline>true</wrapmultiline>
							<textcolor>grey</textcolor>
						</control>
						<control type="label">
							<top>52</top>
							<width>170</width>
							<height>30</height>
							<align>center</align>
							<label>[LOWERCASE]$VAR[OneOrMoreEpisodesVar][/LOWERCASE]</label>
							<font>font12</font>
							<textcolor>grey</textcolor>
						</control>
					</control>
					<control type="group">
						<visible>!String.IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
						<width>170</width>
						<control type="label">
							<top>2</top>
							<width>170</width>
							<height>60</height>
							<align>center</align>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<font>font48_bold</font>
							<wrapmultiline>true</wrapmultiline>
							<textcolor>grey</textcolor>
						</control>
						<control type="label">
							<top>52</top>
							<width>170</width>
							<height>30</height>
							<align>center</align>
							<label>[LOWERCASE]$LOCALIZE[16101][/LOWERCASE]</label>
							<font>font12</font>
							<textcolor>grey</textcolor>
						</control>
					</control>
				</control>
				<!-- Poster -->
				<control type="image">
					<top>36</top>
					<left>54</left>
					<width>334</width>
					<height>501</height>
					<texture background="true">$VAR[PosterThumbVar]</texture>
				</control>
			</control>
		</control>
	</include>
	<!-- Fonts -->
	<include name="LyricsFonts">
		<font>
			<name>fontScriptLyrics</name>
			<filename>arial.ttf</filename>
			<size>50</size>
		</font>
		<font>
			<name>lyr0</name>
			<filename>lyrics/FredokaOne-Regular.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>36</size>
		</font>
		<font>
			<name>lyr1</name>
			<filename>lyrics/Theboldfont.ttf</filename>
			<size>120</size>
		</font>
		<font>
			<name>lyr1b</name>
			<filename>lyrics/PollerOne.ttf</filename>
			<linespacing>0.9</linespacing>
			<aspect>0.9</aspect>
			<size>54</size>
		</font>
		<font>
			<name>lyr2</name>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<style>uppercase</style>
			<linespacing>0.9</linespacing>
			<size>130</size>
		</font>
		<font>
			<name>lyr2b</name>
			<filename>lyrics/Exo2-Black.ttf</filename>
			<linespacing>0.80</linespacing>
			<size>58</size>
		</font>
		<font>
			<name>lyr3</name>
			<filename>lyrics/SF Distant Galaxy.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>120</size>
		</font>
		<font>
			<name>lyr3b</name>
			<filename>lyrics/Ranchers-Regular.ttf</filename>
			<aspect>1.4</aspect>
			<linespacing>0.9</linespacing>
			<size>50</size>
		</font>
		<font>
			<name>lyr4</name>
			<filename>lyrics/Geomancy - Extra Bold.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>120</size>
		</font>
		<font>
			<name>lyr4b</name>
			<filename>lyrics/hemi head bd it.ttf</filename>
			<style>bold</style>
			<linespacing>0.85</linespacing>
			<size>54</size>
		</font>
		<font>
			<name>lyr5</name>
			<filename>lyrics/BOXING.ttf</filename>
			<aspect>1.3</aspect>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>104</size>
		</font>
		<font>
			<name>lyr5b</name>
			<filename>lyrics/FredokaOne-Regular.ttf</filename>
			<linespacing>0.85</linespacing>
			<size>54</size>
		</font>
		<font>
			<name>lyr6</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>110</size>
		</font>
		<font>
			<name>lyr6a</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>165</size>
		</font>
		<font>
			<name>lyr6b</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>220</size>
		</font>
		<font>
			<name>lyr6c</name>
			<filename>lyrics/Exo2-Black.ttf</filename>
			<linespacing>0.80</linespacing>
			<size>56</size>
		</font>
		<font>
			<name>lyr7</name>
			<filename>lyrics/Theboldfont.ttf</filename>
			<size>120</size>
		</font>
		<font>
			<name>lyr7b</name>
			<filename>lyrics/PollerOne.ttf</filename>
			<linespacing>0.9</linespacing>
			<aspect>0.9</aspect>
			<size>54</size>
		</font>
		<font>
			<name>lyr8</name>
			<filename>lyrics/SF Distant Galaxy.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>120</size>
		</font>
		<font>
			<name>lyr8b</name>
			<filename>lyrics/Ranchers-Regular.ttf</filename>
			<aspect>1.4</aspect>
			<linespacing>0.9</linespacing>
			<size>50</size>
		</font>
		<font>
			<name>lyr9</name>
			<filename>lyrics/Geomancy - Extra Bold.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>130</size>
		</font>
		<font>
			<name>lyr9b</name>
			<filename>lyrics/hemi head bd it.ttf</filename>
			<style>bold</style>
			<linespacing>0.85</linespacing>
			<size>54</size>
		</font>
		<font>
			<name>lyr10</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>170</size>
		</font>
		<font>
			<name>lyr10b</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>145</size>
		</font>
		<font>
			<name>lyr10c</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>120</size>
		</font>
		<font>
			<name>lyr10d</name>
			<filename>lyrics/Exo2-Black.ttf</filename>
			<linespacing>0.80</linespacing>
			<size>56</size>
		</font>
		<font>
			<name>lyr11</name>
			<filename>lyrics/Theboldfont.ttf</filename>
			<size>120</size>
		</font>
		<font>
			<name>lyr11b</name>
			<filename>lyrics/PollerOne.ttf</filename>
			<linespacing>0.9</linespacing>
			<aspect>0.9</aspect>
			<size>54</size>
		</font>
		<font>
			<name>lyr12</name>
			<filename>lyrics/BOXING.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>275</size>
		</font>
		<font>
			<name>lyr12b</name>
			<filename>lyrics/BOXING.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>165</size>
		</font>
		<font>
			<name>lyr12c</name>
			<filename>lyrics/BOXING.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>220</size>
		</font>
		<font>
			<name>lyr12d</name>
			<filename>lyrics/FredokaOne-Regular.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>58</size>
		</font>
		<font>
			<name>lyr13</name>
			<filename>lyrics/SF Distant Galaxy.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>120</size>
		</font>
		<font>
			<name>lyr13b</name>
			<filename>lyrics/Ranchers-Regular.ttf</filename>
			<aspect>1.4</aspect>
			<linespacing>0.9</linespacing>
			<size>50</size>
		</font>
		<font>
			<name>lyr14</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>130</size>
		</font>
		<font>
			<name>lyr14b</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>150</size>
		</font>
		<font>
			<name>lyr14c</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>170</size>
		</font>
		<font>
			<name>lyr14d</name>
			<filename>lyrics/Exo2-Black.ttf</filename>
			<linespacing>0.8</linespacing>
			<size>56</size>
		</font>
		<font>
			<name>lyr15</name>
			<filename>lyrics/Geomancy - Extra Bold.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>130</size>
		</font>
		<font>
			<name>lyr15b</name>
			<filename>lyrics/hemi head bd it.ttf</filename>
			<style>bold</style>
			<linespacing>0.85</linespacing>
			<size>54</size>
		</font>
		<font>
			<name>lyr16</name>
			<filename>lyrics/Theboldfont.ttf</filename>
			<size>120</size>
		</font>
		<font>
			<name>lyr16b</name>
			<filename>lyrics/PollerOne.ttf</filename>
			<linespacing>0.9</linespacing>
			<aspect>0.9</aspect>
			<size>54</size>
		</font>
		<font>
			<name>lyr17</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>110</size>
		</font>
		<font>
			<name>lyr17a</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>165</size>
		</font>
		<font>
			<name>lyr17b</name>
			<style>uppercase</style>
			<filename>lyrics/Luckiest Guy.ttf</filename>
			<size>220</size>
		</font>
		<font>
			<name>lyr17c</name>
			<filename>lyrics/Exo2-Black.ttf</filename>
			<linespacing>0.80</linespacing>
			<size>56</size>
		</font>
		<font>
			<name>lyr18</name>
			<filename>lyrics/Geomancy - Extra Bold.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>120</size>
		</font>
		<font>
			<name>lyr18b</name>
			<filename>lyrics/hemi head bd it.ttf</filename>
			<style>bold</style>
			<linespacing>0.85</linespacing>
			<size>54</size>
		</font>
		<font>
			<name>lyr19</name>
			<filename>lyrics/BOXING.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>230</size>
		</font>
		<font>
			<name>lyr19b</name>
			<filename>lyrics/BOXING.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>170</size>
		</font>
		<font>
			<name>lyr19c</name>
			<filename>lyrics/BOXING.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>115</size>
		</font>
		<font>
			<name>lyr19d</name>
			<filename>lyrics/FredokaOne-Regular.ttf</filename>
			<linespacing>0.9</linespacing>
			<size>58</size>
		</font>
		<font>
			<name>lyr20</name>
			<filename>lyrics/SF Distant Galaxy.ttf</filename>
			<style>lowercase</style>
			<linespacing>0.9</linespacing>
			<size>120</size>
		</font>
		<font>
			<name>lyr20b</name>
			<filename>lyrics/Ranchers-Regular.ttf</filename>
			<aspect>1.4</aspect>
			<linespacing>0.9</linespacing>
			<size>50</size>
		</font>
	</include>
	<include name="CommonIconFonts">
		<font>
			<name>IconTinyMD</name>
			<filename>icons/MaterialSymbolsOutlined_Filled-Regular.ttf</filename>
			<size>30</size>
		</font>
		<font>
			<name>IconSmallMD</name>
			<filename>icons/MaterialSymbolsOutlined_Filled-Regular.ttf</filename>
			<size>35</size>
		</font>
		<font>
			<name>IconMediumMD</name>
			<filename>icons/MaterialSymbolsOutlined_Filled-Regular.ttf</filename>
			<size>50</size>
		</font>
		<font>
			<name>IconOSDButtons</name>
			<filename>icons/MaterialSymbolsOutlined_Filled-Regular.ttf</filename>
			<size>65</size>
		</font>
		<font>
			<name>IconMediaMenuButtons</name>
			<filename>icons/MaterialSymbolsOutlined_Filled-Regular.ttf</filename>
			<size>45</size>
		</font>
	</include>
	<!-- Scrollbars -->
	<include name="BottomScrollbars">
		<control type="scrollbar" id="95260">
			<left>120</left>
			<top>1068</top>
			<width>1680</width>
			<height>12</height>
			<onup>52</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(52).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(52).NumPages,5) | Integer.IsGreaterOrEqual(Container(52).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(95260) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(52)</visible>
		</control>
		<control type="scrollbar" id="95360">
			<left>120</left>
			<top>1068</top>
			<width>1680</width>
			<height>12</height>
			<onup>53</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(53).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(53).NumPages,5) | Integer.IsGreaterOrEqual(Container(53).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(95360) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(53)</visible>
		</control>
		<control type="scrollbar" id="95461">
			<left>120</left>
			<top>1068</top>
			<width>1680</width>
			<height>12</height>
			<onup>54</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(54).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(54).NumPages,5) | Integer.IsGreaterOrEqual(Container(54).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(95461) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(54)</visible>
		</control>
		<control type="scrollbar" id="95660">
			<top>1068</top>
			<width>100%</width>
			<height>12</height>
			<onup>56</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(56).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(56).NumPages,5) | Integer.IsGreaterOrEqual(Container(56).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(95660) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(56)</visible>
		</control>
		<control type="scrollbar" id="95760">
			<top>1068</top>
			<width>100%</width>
			<height>12</height>
			<onup>57</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(57).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(57).NumPages,5) | Integer.IsGreaterOrEqual(Container(57).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(95760) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(57)</visible>
		</control>
		<control type="scrollbar" id="95960">
			<top>1068</top>
			<width>100%</width>
			<height>12</height>
			<onup>59</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(59).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(59).NumPages,5) | Integer.IsGreaterOrEqual(Container(59).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(95960) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(59)</visible>
		</control>
		<control type="scrollbar" id="50960">
			<left>30</left>
			<top>1068</top>
			<width>1850</width>
			<height>12</height>
			<onup>509</onup>
			<ondown condition="Control.IsVisible(616) + Integer.IsGreaterOrEqual(Container(509).NumPages,5)">616</ondown>
			<ondown condition="!Integer.IsGreaterOrEqual(Container(509).NumPages,5) | Integer.IsGreaterOrEqual(Container(509).NumPages,5) + !Control.IsVisible(616)">4400</ondown>
			<texturesliderbackground />
			<texturesliderbar>colors/white25.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texturesliderbarfocus>
			<showonepage>false</showonepage>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="0" time="500" delay="500" condition="[!Control.HasFocus(50960) + !Container.Scrolling]">Conditional</animation>
			<visible>Control.IsVisible(509)</visible>
		</control>
	</include>
	<!-- Fullscreen Info -->
	<include name="FullscreenInfo">
		<control type="group">
			<animation effect="fade" end="100" time="250">WindowOpen</animation>
			<animation effect="fade" end="0" time="250">WindowClose</animation>
			<control type="image">
				<left>-5%</left>
				<top>-30</top>
				<width>110%</width>
				<height>147</height>
				<texture border="40" flipy="true" colordiffuse="E6FFFFFF">dialogs/default/bg.png</texture>
				<visible>!Window.IsVisible(playerprocessinfo)</visible>
				<visible>![Window.IsVisible(SliderDialog) | Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(OSDSubtitleSettings) | Window.IsVisible(VideoBookmarks) | Window.IsVisible(SubtitleSearch) | Window.IsVisible(1114)]</visible>
				<animation effect="fade" end="100" time="250">Visible</animation>
			</control>
			<!-- Media Flags -->
			<control type="grouplist">
				<left>15</left>
				<top>5</top>
				<width>1890</width>
				<height>100</height>
				<align>center</align>
				<orientation>horizontal</orientation>
				<visible>![Window.IsActive(videoosd) + Skin.HasSetting(VideoOSDOnTop) | Window.IsVisible(playerprocessinfo) | Window.IsVisible(SliderDialog) | Window.IsVisible(pvrchannelguide) | Window.IsVisible(PVROSDTeletext) | Window.IsVisible(PVROSDChannels) | Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(OSDSubtitleSettings) | Window.IsVisible(VideoBookmarks) | Window.IsVisible(SubtitleSearch) | Window.IsVisible(1114)]</visible>
				<animation effect="fade" end="100" time="250">Visible</animation>
				<control type="group">
					<visible>!String.IsEmpty(VideoPlayer.Studio)</visible>
					<width>240</width>
					<control type="image" id="142099">
						<width>240</width>
						<include>MediaFlagValues</include>
						<bordersize>2</bordersize>
						<texture>$VAR[PathFlagsStudios]$INFO[VideoPlayer.Studio,,.png]</texture>
					</control>
					<control type="label">
						<width>240</width>
						<height>90</height>
						<align>center</align>
						<label>$INFO[VideoPlayer.Studio]</label>
						<font>font10</font>
						<textcolor>grey2</textcolor>
						<wrapmultiline>true</wrapmultiline>
						<animation effect="fade" time="250" delay="100">Visible</animation>
						<visible>String.IsEmpty(Control.GetLabel(142099))</visible>
					</control>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/mpaa/$VAR[VideoRatingFlagVar]</texture>
					<visible>!String.IsEmpty(VideoPlayer.MPAA)</visible>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/resolution/$INFO[VideoPlayer.VideoResolution,,.png]</texture>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/$INFO[VideoPlayer.HdrType,hdr/,.png]</texture>
					<visible>!String.IsEmpty(VideoPlayer.HdrType)</visible>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/videocodec/$VAR[VideoSourceFlagVar]</texture>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/aspectratio/$INFO[VideoPlayer.VideoAspect,,.png]</texture>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/audiocodec/$VAR[PlayerAudioCodecFlagVar]</texture>
					<visible>!String.IsEmpty(VideoPlayer.AudioCodec)</visible>
				</control>
				<control type="image">
					<width>240</width>
					<include>MediaFlagValues</include>
					<texture>$VAR[MediaFlagsPathVar]/audiochannels/$INFO[VideoPlayer.AudioChannels,,.png]</texture>
					<visible>!String.IsEmpty(VideoPlayer.AudioChannels)</visible>
				</control>
			</control>
			<control type="image">
				<left>-5%</left>
				<top>755</top>
				<width>110%</width>
				<height>400</height>
				<texture border="40" colordiffuse="E6FFFFFF">dialogs/default/bg.png</texture>
				<visible>VideoPlayer.HasInfo + [VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos)] | [VideoPlayer.HasInfo + Skin.HasSetting(Enable.RecordingInfo) + Pvr.IsPlayingRecording] | VideoPlayer.HasInfo + Skin.HasSetting(Enable.AddonInfo) + !Pvr.IsPlayingRecording</visible>
				<animation effect="slide" end="0,-90" time="240" tween="quadratic" condition="Window.IsActive(videoosd) + !Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
			</control>
			<include condition="VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos)">LibraryFullscreenInfo</include>
			<include condition="VideoPlayer.HasInfo + Skin.HasSetting(Enable.AddonInfo) + ![VideoPlayer.Content(LiveTV) | Pvr.IsPlayingRecording | VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos)] | [VideoPlayer.HasInfo + Skin.HasSetting(Enable.RecordingInfo) + Pvr.IsPlayingRecording]">OtherFullscreenInfo</include>
		</control>
	</include>
	<include name="LibraryFullscreenInfo">
		<control type="group">
			<top>600</top>
			<animation effect="slide" end="0,-90" time="240" tween="quadratic" condition="Window.IsActive(videoosd) + !Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
			<control type="group">
				<top>-110</top>
				<visible>!VideoPlayer.Content(musicvideos)</visible>
				<visible>!Skin.HasSetting(Disable.FullscreenPoster)</visible>
				<control type="image">
					<left>20</left>
					<top>-155</top>
					<width>350</width>
					<height>350</height>
					<aspectratio aligny="top">keep</aspectratio>
					<texture background="true" diffuse="thumbs/boxes/cdart_mask.png">$INFO[Player.Art(discart)]</texture>
					<visible>!Skin.HasSetting(Disable.FullscreenDiscart)</visible>
				</control>
				<control type="image">
					<width>390</width>
					<height>560</height>
					<texture background="true">$VAR[PlayerPosterVar]</texture>
					<bordertexture border="20">thumbs/thumb_shadow.png</bordertexture>
					<bordersize>20</bordersize>
				</control>
			</control>
			<control type="image">
				<top>30</top>
				<width>400</width>
				<height>400</height>
				<aspectratio aligny="top">stretch</aspectratio>
				<texture background="true" diffuse="thumbs/movieposter_mask.png">$VAR[PlayerPosterVar]</texture>
				<visible>VideoPlayer.Content(musicvideos)</visible>
			</control>
			<control type="group">
				<left>250</left>
				<top>25</top>
				<control type="image" id="999149">
					<left>1207</left>
					<top>-110</top>
					<width>450</width>
					<height>260</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$VAR[PlayerArtworkVar]</texture>
					<visible>!Skin.HasSetting(Disable.FullscreenInfoLogo)</visible>
					<animation effect="slide" end="0,259" condition="Skin.HasSetting(Disable.FullscreenPoster)">Conditional</animation>
					<animation effect="slide" end="-1440" condition="Skin.HasSetting(Disable.FullscreenPoster) + !Skin.HasSetting(SwapFullscreenInfo)">Conditional</animation>
				</control>
				<control type="group">
					<left>150</left>
					<top>132</top>
					<height>300</height>
					<animation effect="slide" end="80" condition="Skin.HasSetting(Disable.FullscreenPoster) + !Skin.HasSetting(SwapFullscreenInfo)">Conditional</animation>
					<animation effect="slide" end="-380,-10" condition="Skin.HasSetting(Disable.FullscreenPoster) + Skin.HasSetting(SwapFullscreenInfo)">Conditional</animation>
					<control type="grouplist">
						<width>1420</width>
						<height>300</height>
						<align>center</align>
						<usecontrolcoords>true</usecontrolcoords>
						<visible>String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot)) + String.IsEmpty(Window(fullscreeninfo).Property(ShowCast)) + String.IsEmpty(Window(fullscreeninfo).Property(ShowMoreDetails))</visible>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font30_title_bold</font>
							<textcolor>grey</textcolor>
							<scroll>true</scroll>
							<label>$INFO[Player.Title]$INFO[VideoPlayer.Year, (,)]</label>
							<visible>!VideoPlayer.Content(episodes)</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font30_title_bold</font>
							<textcolor>grey</textcolor>
							<scroll>true</scroll>
							<label>$INFO[VideoPlayer.TvShowTitle]</label>
							<visible>VideoPlayer.Content(episodes)</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<scroll>true</scroll>
							<label>$INFO[VideoPlayer.Tagline]</label>
							<visible>!String.IsEmpty(VideoPlayer.Tagline)</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<label>$INFO[VideoPlayer.Season,$LOCALIZE[20373] ,: ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] ]$INFO[VideoPlayer.Title,  -  ]$INFO[VideoPlayer.Premiered, (,)]</label>
							<visible>VideoPlayer.Content(episodes)</visible>
						</control>
						<control type="grouplist">
							<width>1420</width>
							<height>60</height>
							<itemgap>10</itemgap>
							<orientation>horizontal</orientation>
							<usecontrolcoords>true</usecontrolcoords>
							<visible>String.IsEmpty(Window(fullscreeninfo).Property(ShowCast)) + String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot))</visible>
							<control type="label">
								<width>auto</width>
								<height>60</height>
								<font>font15</font>
								<textcolor>grey</textcolor>
								<label>$INFO[Player.FinishTime,$LOCALIZE[31393]: ,]  •  $VAR[PlayerTimeRemainingHourVar,, ]$VAR[PlayerTimeRemainingMinuteVar]</label>
							</control>
							<control type="grouplist">
								<width>1420</width>
								<height>60</height>
								<itemgap>10</itemgap>
								<orientation>horizontal</orientation>
								<usecontrolcoords>true</usecontrolcoords>
								<control type="group">
									<visible>!String.IsEmpty(VideoPlayer.Rating)</visible>
									<width>170</width>
									<height>60</height>
									<control type="label">
										<width>auto</width>
										<height>30</height>
										<align>center</align>
										<label>$INFO[VideoPlayer.Rating]</label>
										<font>font14_bold</font>
										<textcolor>grey</textcolor>
									</control>
									<control type="label">
										<top>30</top>
										<width>auto</width>
										<height>30</height>
										<align>center</align>
										<label>[LOWERCASE]$VAR[RatingAndVotesVar][/LOWERCASE]</label>
										<font>font11</font>
										<textcolor>grey</textcolor>
									</control>
								</control>
								<control type="grouplist">
									<visible>!String.IsEmpty(VideoPlayer.UserRating)</visible>
									<width>100</width>
									<orientation>horizontal</orientation>
									<control type="image">
										<width>50</width>
										<height>60</height>
										<aspectratio>keep</aspectratio>
										<texture colordiffuse="$VAR[ThemeLabelColor]">favourites.png</texture>
										<animation effect="fade" end="67" condition="true">Conditional</animation>
									</control>
									<control type="label">
										<height>60</height>
										<width>auto</width>
										<font>font14_bold</font>
										<textcolor>grey</textcolor>
										<label>$INFO[VideoPlayer.UserRating]</label>
									</control>
								</control>
								<control type="grouplist">
									<visible>!String.IsEmpty(VideoPlayer.Top250)</visible>
									<width>165</width>
									<itemgap>5</itemgap>
									<orientation>horizontal</orientation>
									<control type="image">
										<width>80</width>
										<height>60</height>
										<aspectratio>keep</aspectratio>
										<texture>logos/imdb.png</texture>
										<colordiffuse>grey</colordiffuse>
									</control>
									<control type="label">
										<width>auto</width>
										<height>60</height>
										<align>center</align>
										<label>$INFO[VideoPlayer.Top250,#]</label>
										<font>font14_bold</font>
										<textcolor>grey</textcolor>
									</control>
								</control>
								<control type="grouplist">
									<width>560</width>
									<height>60</height>
									<itemgap>10</itemgap>
									<orientation>horizontal</orientation>
									<control type="grouplist">
										<visible>VideoPlayer.Content(movies) + [!String.IsEmpty(Container(4501).ListItem.Property(ratings.tomatometerallaudience.rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_Rating))]</visible>
										<width>140</width>
										<orientation>horizontal</orientation>
										<control type="image">
											<width>60</width>
											<height>55</height>
											<aspectratio>keep</aspectratio>
											<colordiffuse>grey</colordiffuse>
											<texture>$VAR[RottenFreshLogoVar]</texture>
										</control>
										<control type="label">
											<height>60</height>
											<width>auto</width>
											<font>font14_bold</font>
											<textcolor>grey</textcolor>
											<label>$VAR[RottenFreshLabelVar]$VAR[RottenFreshLabel2Var]</label>
										</control>
									</control>
									<control type="grouplist">
										<visible>VideoPlayer.Content(movies) + [!String.IsEmpty(VideoPlayer.Rating(tomatometerallaudience)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.RottenTomatoes_UserMeter))]</visible>
										<width>140</width>
										<orientation>horizontal</orientation>
										<control type="image">
											<width>60</width>
											<height>55</height>
											<aspectratio>keep</aspectratio>
											<colordiffuse>grey</colordiffuse>
											<texture>$VAR[RottenFreshAudienceLogoVar]</texture>
										</control>
										<control type="label">
											<width>auto</width>
											<height>60</height>
											<font>font14_bold</font>
											<textcolor>grey</textcolor>
											<label>$VAR[RottenFreshAudienceLabelVar]$VAR[RottenFreshAudienceLabel2Var]</label>
										</control>
									</control>
									<control type="grouplist">
										<visible>!String.IsEmpty(Container(4501).ListItem.Property(ratings.themoviedb.rating)) | !String.IsEmpty(Container(4501).ListItem.Property(ratings.tmdb.rating)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.TMDb_Rating))</visible>
										<width>140</width>
										<itemgap>10</itemgap>
										<orientation>horizontal</orientation>
										<control type="image">
											<width>60</width>
											<height>60</height>
											<aspectratio>keep</aspectratio>
											<colordiffuse>grey</colordiffuse>
											<texture>logos/tmdb.png</texture>
										</control>
										<control type="label">
											<width>auto</width>
											<height>60</height>
											<font>font14_bold</font>
											<textcolor>grey</textcolor>
											<label>$VAR[TMDbRatingsLabelVar]</label>
										</control>
									</control>
									<control type="grouplist">
										<visible>!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Trakt_Rating))</visible>
										<width>140</width>
										<orientation>horizontal</orientation>
										<control type="image">
											<width>60</width>
											<height>60</height>
											<aspectratio>keep</aspectratio>
											<colordiffuse>grey</colordiffuse>
											<texture>logos/trakt-clearlogo.png</texture>
										</control>
										<control type="label">
											<width>auto</width>
											<height>60</height>
											<font>font14_bold</font>
											<textcolor>grey</textcolor>
											<label>$INFO[Window(Home).Property(TMDbHelper.Player.Trakt_Rating)]</label>
										</control>
									</control>
								</control>
							</control>
						</control>
						<control type="label">
							<width>1420</width>
							<height>54</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<label>$INFO[VideoPlayer.Director,$LOCALIZE[31000]:[COLOR grey] ,[/COLOR]]$INFO[VideoPlayer.Writer, [COLOR grey] • [/COLOR] $LOCALIZE[31001]:[COLOR grey] ,[/COLOR]]</label>
							<visible>[!String.IsEmpty(VideoPlayer.Director) | !String.IsEmpty(VideoPlayer.Writer)] + String.IsEmpty(Window(fullscreeninfo).Property(ShowCast)) + String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot))</visible>
						</control>
					</control>
					<control type="grouplist">
						<width>1420</width>
						<height>300</height>
						<align>center</align>
						<usecontrolcoords>true</usecontrolcoords>
						<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowMoreDetails)) + [String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot)) + String.IsEmpty(Window(fullscreeninfo).Property(ShowCast))]</visible>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<scroll>true</scroll>
							<label>$INFO[VideoPlayer.Genre,$LOCALIZE[515]: [COLOR grey],[/COLOR]]</label>
							<visible>!String.IsEmpty(VideoPlayer.Genre)</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<scroll>true</scroll>
							<label>$INFO[Window(Home).Property(TMDbHelper.Player.Budget),$LOCALIZE[31850]: [COLOR grey],[/COLOR]]$INFO[Window(Home).Property(TMDbHelper.Player.Revenue),[COLOR grey]  •  [/COLOR]$LOCALIZE[31851]: [COLOR grey],[/COLOR]]</label>
							<visible>VideoPlayer.Content(movies) + [!String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Budget)) | !String.IsEmpty(Window(Home).Property(TMDbHelper.Player.Revenue))]</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<scroll>true</scroll>
							<label>$INFO[VideoPlayer.Premiered,$LOCALIZE[172]: [COLOR grey],[/COLOR]]</label>
							<visible>VideoPlayer.Content(movies) + !String.IsEmpty(VideoPlayer.Premiered)</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>60</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<scroll>true</scroll>
							<label>$INFO[VideoPlayer.LastPlayed,$LOCALIZE[568]: [COLOR grey],[/COLOR]]$INFO[VideoPlayer.PlayCount,[COLOR grey]  •  [/COLOR]$LOCALIZE[567]: [COLOR grey],[/COLOR]]</label>
							<visible>!String.IsEmpty(VideoPlayer.LastPlayed)</visible>
						</control>
					</control>
					<control type="grouplist">
						<top>40</top>
						<width>1420</width>
						<height>500</height>
						<usecontrolcoords>true</usecontrolcoords>
						<itemgap>15</itemgap>
						<control type="label">
							<width>1420</width>
							<height>35</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<label>$LOCALIZE[206]</label>
							<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowCast))</visible>
						</control>
						<control type="label">
							<width>1420</width>
							<height>35</height>
							<font>font15</font>
							<textcolor>$VAR[ThemeLabelColor]</textcolor>
							<label>$LOCALIZE[207]</label>
							<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot))</visible>
						</control>
						<control type="textbox" id="400">
							<width>1420</width>
							<height>170</height>
							<font>font15_textbox2</font>
							<label>$VAR[VideoPlayerPlotVar]</label>
							<textcolor>grey</textcolor>
							<pagecontrol>61</pagecontrol>
							<align>justify</align>
							<autoscroll time="3000" delay="4000" repeat="5000">true</autoscroll>
							<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot)) | !String.IsEmpty(Window(fullscreeninfo).Property(ShowCast))</visible>
						</control>
					</control>
					<control type="scrollbar" id="61">
						<include>HiddenObject</include>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="OtherFullscreenInfo">
		<control type="group">
			<animation effect="slide" end="0,-90" time="240" tween="quadratic" condition="Window.IsActive(videoosd) + !Skin.HasSetting(VideoOSDOnTop)">Conditional</animation>
			<control type="image">
				<left>30</left>
				<top>780</top>
				<width>400</width>
				<height>240</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="thumbs/movieposter_mask.png" fallback="$INFO[Player.Art(thumb)]">$INFO[VideoPlayer.Cover]</texture>
			</control>
			<control type="group">
				<left>460</left>
				<top>757</top>
				<control type="grouplist">
					<width>1420</width>
					<height>300</height>
					<align>center</align>
					<visible>String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot))</visible>
					<control type="label">
						<width>1420</width>
						<height>60</height>
						<font>font30_title_bold</font>
						<textcolor>grey</textcolor>
						<scroll>true</scroll>
						<label>$INFO[Player.Title]$INFO[VideoPlayer.ChannelNumberLabel, (,)]</label>
					</control>
					<control type="label">
						<width>1420</width>
						<height>60</height>
						<font>font15</font>
						<textcolor>$VAR[ThemeLabelColor]</textcolor>
						<label>$INFO[VideoPlayer.Season,$LOCALIZE[20373] ,: ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] ]$INFO[VideoPlayer.Title,  -  ]$INFO[VideoPlayer.Premiered, (,)]</label>
						<visible>!String.IsEmpty(VideoPlayer.Episode) + !String.IsEqual(Player.Title,VideoPlayer.Title)</visible>
					</control>
					<control type="label">
						<width>1420</width>
						<height>60</height>
						<font>font15</font>
						<textcolor>$VAR[ThemeLabelColor]</textcolor>
						<label>$INFO[VideoPlayer.Director,$LOCALIZE[31000]:[COLOR grey] ,[/COLOR]]$INFO[VideoPlayer.Writer, [COLOR grey] • [/COLOR] $LOCALIZE[31001]:[COLOR grey] ,[/COLOR]]</label>
						<visible>![String.IsEmpty(VideoPlayer.Director) | String.IsEmpty(VideoPlayer.Writer)]</visible>
					</control>
					<control type="label">
						<width>1420</width>
						<height>60</height>
						<font>font15</font>
						<textcolor>$VAR[ThemeLabelColor]</textcolor>
						<label>$INFO[VideoPlayer.ChannelName]</label>
						<visible>!String.IsEmpty(VideoPlayer.ChannelName)</visible>
					</control>
					<control type="label">
						<width>1420</width>
						<height>60</height>
						<font>font15</font>
						<label>$INFO[VideoPlayer.Season,$LOCALIZE[20373] ,: ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] , - ]$INFO[VideoPlayer.EpisodeName]</label>
						<visible>!String.IsEmpty(VideoPlayer.EpisodeName)</visible>
					</control>
					<control type="label">
						<width>1420</width>
						<height>60</height>
						<font>font15</font>
						<textcolor>grey</textcolor>
						<label>$INFO[Player.FinishTime,$LOCALIZE[31393]: ,]  •  $VAR[PlayerTimeRemainingHourVar,, ]$VAR[PlayerTimeRemainingMinuteVar]</label>
					</control>
				</control>
				<control type="grouplist">
					<top>40</top>
					<width>1420</width>
					<height>300</height>
					<itemgap>15</itemgap>
					<control type="label">
						<width>1420</width>
						<height>35</height>
						<font>font15</font>
						<textcolor>$VAR[ThemeLabelColor]</textcolor>
						<label>$LOCALIZE[206]</label>
						<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowCast))</visible>
					</control>
					<control type="label">
						<width>1420</width>
						<height>35</height>
						<font>font15</font>
						<textcolor>$VAR[ThemeLabelColor]</textcolor>
						<label>$LOCALIZE[207]</label>
						<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot))</visible>
					</control>
					<control type="textbox" id="403">
						<width>1420</width>
						<height>170</height>
						<font>font15_textbox2</font>
						<label>$VAR[VideoPlayerPlotVar]</label>
						<textcolor>grey</textcolor>
						<pagecontrol>61</pagecontrol>
						<align>justify</align>
						<autoscroll time="3000" delay="4000" repeat="5000">true</autoscroll>
						<visible>!String.IsEmpty(Window(fullscreeninfo).Property(ShowPlot))</visible>
					</control>
				</control>
			</control>
		</control>
		<control type="scrollbar" id="61">
			<include>HiddenObject</include>
		</control>
	</include>
	<include name="LiveTVFullscreenInfo">
		<!-- LiveTV Plot-->
		<control type="group">
			<top>5</top>
			<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="400">WindowClose</animation>
			<visible>Skin.HasSetting(TogglePlotLiveTV)</visible>
			<!-- PlotOutLine BG -->
			<control type="image">
				<left>17</left>
				<width>1885</width>
				<height>300</height>
				<texture border="40">dialogs/default/bg.png</texture>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!String.IsEmpty(VideoPlayer.PlotOutline) + !String.IsEqual(VideoPlayer.PlotOutline,N/A) + !String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot))</visible>
			</control>
			<!-- FullPlot BG -->
			<control type="image">
				<left>17</left>
				<width>1885</width>
				<height>720</height>
				<texture border="40">dialogs/default/bg.png</texture>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>[String.IsEmpty(VideoPlayer.PlotOutline) | String.IsEqual(VideoPlayer.PlotOutline,N/A)] | String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot))</visible>
			</control>
			<control type="grouplist">
				<top>50</top>
				<left>57</left>
				<height>650</height>
				<width>1805</width>
				<itemgap>10</itemgap>
				<control type="label">
					<height>30</height>
					<font>font16</font>
					<textcolor>$VAR[ThemeLabelColor]</textcolor>
					<label>$INFO[VideoPlayer.ChannelName]</label>
				</control>
				<control type="label">
					<width>auto</width>
					<height>55</height>
					<font>font48_bold</font>
					<scroll>true</scroll>
					<label>$INFO[VideoPlayer.Season,$LOCALIZE[20373] ,: ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] , - ]$INFO[VideoPlayer.EpisodeName]</label>
					<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
				</control>
				<control type="grouplist">
					<width>1805</width>
					<height>55</height>
					<itemgap>50</itemgap>
					<orientation>horizontal</orientation>
					<visible>!String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
					<control type="label">
						<width>auto</width>
						<height>55</height>
						<font>font48</font>
						<scroll>true</scroll>
						<label>[B][COLOR $VAR[ThemeLabelColor]]$LOCALIZE[19031]:[/COLOR] $INFO[VideoPlayer.NextTitle][/B]</label>
					</control>
					<control type="label">
						<width>auto</width>
						<height>65</height>
						<font>font15</font>
						<scroll>true</scroll>
						<label>[COLOR $VAR[ThemeLabelColor]]$LOCALIZE[180]:[/COLOR] $INFO[VideoPlayer.NextDuration]</label>
					</control>
				</control>
				<control type="label">
					<width>auto</width>
					<height>35</height>
					<font>font14</font>
					<scroll>true</scroll>
					<label>[B]$INFO[VideoPlayer.PlotOutline,(,)][/B]</label>
					<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot)) + !String.IsEmpty(VideoPlayer.PlotOutline) + String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
				</control>
				<control type="label">
					<width>auto</width>
					<height>35</height>
					<font>font14</font>
					<scroll>true</scroll>
					<label>[B]$INFO[VideoPlayer.NextPlotOutline,(,)][/B]</label>
					<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot)) + !String.IsEmpty(VideoPlayer.NextPlotOutline) + !String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
				</control>
				<control type="image">
					<width>1809</width>
					<height>2</height>
					<texture colordiffuse="$VAR[ThemeLabelColor]">colors/white.png</texture>
				</control>
				<control type="label">
					<width>1000</width>
					<height>30</height>
					<textcolor>grey</textcolor>
					<label>$INFO[VideoPlayer.Genre,$LOCALIZE[515]: ]</label>
					<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
				</control>
				<control type="label">
					<width>1000</width>
					<height>30</height>
					<textcolor>grey</textcolor>
					<label>$INFO[VideoPlayer.NextGenre,$LOCALIZE[515]: ]</label>
					<visible>!String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
				</control>
				<control type="group">
					<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
					<control type="textbox">
						<width>1805</width>
						<height>174</height>
						<label>$INFO[VideoPlayer.PlotOutline]</label>
						<autoscroll delay="6000" time="3000" repeat="6000">true</autoscroll>
						<visible>!String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot)) + !String.IsEmpty(VideoPlayer.PlotOutline)</visible>
					</control>
					<control type="textbox">
						<width>1805</width>
						<height>774</height>
						<label>$INFO[VideoPlayer.Plot]</label>
						<autoscroll delay="6000" time="3000" repeat="6000">true</autoscroll>
						<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot))</visible>
					</control>
					<control type="textbox">
						<width>1805</width>
						<height>50</height>
						<label>$INFO[VideoPlayer.Plot]</label>
						<autoscroll delay="6000" time="3000" repeat="6000">true</autoscroll>
						<visible>String.IsEmpty(VideoPlayer.PlotOutline) + !String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot))</visible>
					</control>
				</control>
				<control type="group">
					<visible>!String.IsEmpty(Window(fullscreeninfo).Property(LiveTVNext))</visible>
					<control type="textbox">
						<width>1805</width>
						<height>174</height>
						<label>$INFO[VideoPlayer.NextPlotOutline]</label>
						<autoscroll delay="6000" time="3000" repeat="6000">true</autoscroll>
						<visible>!String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot)) + !String.IsEmpty(VideoPlayer.PlotOutline)</visible>
					</control>
					<control type="textbox">
						<width>1805</width>
						<height>774</height>
						<label>$INFO[VideoPlayer.NextPlot]</label>
						<autoscroll delay="6000" time="3000" repeat="6000">true</autoscroll>
						<visible>String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot))</visible>
					</control>
					<control type="textbox">
						<width>1805</width>
						<height>50</height>
						<label>$INFO[VideoPlayer.NextPlot]</label>
						<autoscroll delay="6000" time="3000" repeat="6000">true</autoscroll>
						<visible>String.IsEmpty(VideoPlayer.PlotOutline) + !String.IsEmpty(Window(fullscreeninfo).Property(LiveTVFullPlot))</visible>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- Content Lists -->
	<include name="SkinVariablesContentList">
		<param name="id" default="4501" />
		<param name="content" default="$VAR[SkinVariableDBContainerPluginPathVar]" />
		<definition>
			<control type="list" id="$PARAM[id]">
				<include>HiddenList</include>
				<content sortby="userpreference">$PARAM[content]</content>
			</control>
		</definition>
	</include>
	<include name="TMDbHelperContentList">
		<control type="list" id="9143">
			<include>HiddenList</include>
		</control>
	</include>
	<!-- Letter Jump -->
	<include name="AlphabetNumber">
		<control type="label">
			<width>60</width>
			<height>37</height>
			<align>center</align>
			<font>font15_title</font>
			<textcolor>grey2</textcolor>
			<label>#</label>
			<visible>![String.IsEqual(ListItem.SortLetter,$NUMBER[0]) | String.IsEqual(ListItem.SortLetter,$NUMBER[1]) | String.IsEqual(ListItem.SortLetter,$NUMBER[2]) | String.IsEqual(ListItem.SortLetter,$NUMBER[3]) | String.IsEqual(ListItem.SortLetter,$NUMBER[4]) | String.IsEqual(ListItem.SortLetter,$NUMBER[5]) | String.IsEqual(ListItem.SortLetter,$NUMBER[6]) | String.IsEqual(ListItem.SortLetter,$NUMBER[7]) | String.IsEqual(ListItem.SortLetter,$NUMBER[8]) | String.IsEqual(ListItem.SortLetter,$NUMBER[9])]</visible>
		</control>
		<control type="label">
			<width>60</width>
			<height>37</height>
			<align>center</align>
			<font>font15_title</font>
			<textcolor>$VAR[ThemeLabelColor]</textcolor>
			<label>#</label>
			<visible>[String.IsEqual(ListItem.SortLetter,$NUMBER[0]) | String.IsEqual(ListItem.SortLetter,$NUMBER[1]) | String.IsEqual(ListItem.SortLetter,$NUMBER[2]) | String.IsEqual(ListItem.SortLetter,$NUMBER[3]) | String.IsEqual(ListItem.SortLetter,$NUMBER[4]) | String.IsEqual(ListItem.SortLetter,$NUMBER[5]) | String.IsEqual(ListItem.SortLetter,$NUMBER[6]) | String.IsEqual(ListItem.SortLetter,$NUMBER[7]) | String.IsEqual(ListItem.SortLetter,$NUMBER[8]) | String.IsEqual(ListItem.SortLetter,$NUMBER[9])]</visible>
		</control>
	</include>
	<include name="AlphabetLetter">
		<control type="label">
			<width>60</width>
			<height>37</height>
			<align>center</align>
			<font>font15_title</font>
			<textcolor>grey2</textcolor>
			<label>$PARAM[letter]</label>
			<visible>!String.IsEqual(ListItem.SortLetter,$PARAM[letter])</visible>
		</control>
		<control type="label">
			<width>60</width>
			<height>37</height>
			<align>center</align>
			<font>font15_title</font>
			<textcolor>$VAR[ThemeLabelColor]</textcolor>
			<label>$PARAM[letter]</label>
			<visible>String.IsEqual(ListItem.SortLetter,$PARAM[letter])</visible>
		</control>
	</include>
	<include name="DefaultLetterJump">
		<control type="button" id="615">
			<description>Go to Letter</description>
			<include>HiddenObject</include>
			<onleft>SetFocus(50)</onleft>
			<onright condition="!Control.IsVisible(51) + !Control.IsVisible(500) + !Control.IsVisible(511)">4400</onright>
			<onright condition="Control.IsVisible(51) | Control.IsVisible(500) | Control.IsVisible(511)">SetFocus(50)</onright>
			<onup>SetFocus(50)</onup>
			<onup>Action(prevletter)</onup>
			<onup>SetFocus(615)</onup>
			<ondown>SetFocus(50)</ondown>
			<ondown>Action(nextletter)</ondown>
			<ondown>SetFocus(615)</ondown>
			<visible>[[Container.HasNext | Container.HasPrevious] + String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561])]</visible>
		</control>
		<control type="button" id="616">
			<description>Go to Letter</description>
			<include>HiddenObject</include>
			<onup>SetFocus(50)</onup>
			<ondown>4400</ondown>
			<onleft>SetFocus(50)</onleft>
			<onleft>Action(prevletter)</onleft>
			<onleft>SetFocus(616)</onleft>
			<onright>SetFocus(50)</onright>
			<onright>Action(nextletter)</onright>
			<onright>SetFocus(616)</onright>
			<visible>[[Container.HasNext | Container.HasPrevious] + String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561])]</visible>
		</control>
		<control type="group">
			<left>1860</left>
			<animation effect="slide" end="100,0" time="200" tween="quadratic" easing="out" condition="!Control.HasFocus(615)">Conditional</animation>
			<visible>Control.HasFocus(615)</visible>
			<control type="image">
				<width>60</width>
				<height>100%</height>
				<texture>colors/black.png</texture>
			</control>
			<control type="grouplist">
				<top>44</top>
				<width>60</width>
				<height>1036</height>
				<include>AlphabetNumber</include>
				<include content="AlphabetLetter">
					<param name="letter">A</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">B</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">C</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">D</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">E</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">F</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">G</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">H</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">I</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">J</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">K</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">L</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">M</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">N</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">O</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">P</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">Q</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">R</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">S</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">T</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">U</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">V</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">W</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">X</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">Y</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">Z</param>
				</include>
			</control>
		</control>
		<control type="group">
			<top>1000</top>
			<animation effect="slide" end="0,100" time="200" tween="quadratic" easing="out" condition="!Control.HasFocus(616)">Conditional</animation>
			<visible>Control.HasFocus(616)</visible>
			<control type="image">
				<width>100%</width>
				<height>80</height>
				<texture>bottombar.png</texture>
			</control>
			<control type="grouplist">
				<left>60</left>
				<top>20</top>
				<width>1800</width>
				<height>60</height>
				<orientation>horizontal</orientation>
				<align>center</align>
				<include>AlphabetNumber</include>
				<include content="AlphabetLetter">
					<param name="letter">A</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">B</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">C</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">D</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">E</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">F</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">G</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">H</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">I</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">J</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">K</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">L</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">M</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">N</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">O</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">P</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">Q</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">R</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">S</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">T</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">U</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">V</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">W</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">X</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">Y</param>
				</include>
				<include content="AlphabetLetter">
					<param name="letter">Z</param>
				</include>
			</control>
		</control>
	</include>
	<include name="BusySpinner">
		<param name="left">912</param>
		<param name="top">492</param>
		<param name="size">96</param>
		<definition>
			<control type="group" id="99999">
				<visible>$PARAM[visible]</visible>
				<control type="image">
					<include>FullscreenDimensions</include>
					<texture>$PARAM[texture]</texture>
				</control>
				<control type="group">
					<left>$PARAM[left]</left>
					<top>$PARAM[top]</top>
					<control type="image">
						<description>Busy animation</description>
						<width>$PARAM[size]</width>
						<height>$PARAM[size]</height>
						<texture colordiffuse="$VAR[ThemeLabelColor]">android/busyspinner_clockwise.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="rotate" start="0" end="360" center="auto" time="2000" loop="true" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Busy animation</description>
						<width>$PARAM[size]</width>
						<height>$PARAM[size]</height>
						<texture colordiffuse="$VAR[ThemeLabelColor]">android/busyspinner_counterclockwise.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="rotate" start="360" end="0" center="auto" time="2000" loop="true" condition="true">Conditional</animation>
					</control>
					<!-- <control type="label">
						<description>Busy label</description>
						<width>96</width>
						<height>96</height>
						<textcolor>grey</textcolor>
						<align>center</align>
						<label>$INFO[Control.GetLabel(10),,%]</label>
						<font>font12</font>
						<visible>!Integer.IsEqual(Control.GetLabel(10), 0) + Window.IsVisible(busydialog)</visible>
					</control> -->
				</control>
			</control>
		</definition>
	</include>
	<include name="Pointer">
		<param name="size" default="50" />
		<definition>
			<control type="image" id="1">
				<description>Pointer</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<texture>pointer_arrow.png</texture>
				<visible>String.IsEmpty(Window(Home).Property(Enable.ScreenshotMode))</visible>
			</control>
			<control type="image" id="2">
				<description>Pointer Focus</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<texture>pointer_arrow.png</texture>
				<visible>String.IsEmpty(Window(Home).Property(Enable.ScreenshotMode))</visible>
			</control>
			<control type="image" id="3">
				<description>Pointer Drag</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<texture>pointer_arrow.png</texture>
				<visible>String.IsEmpty(Window(Home).Property(Enable.ScreenshotMode))</visible>
			</control>
			<control type="image" id="4">
				<description>Pointer Click</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<texture>pointer_click.png</texture>
				<visible>String.IsEmpty(Window(Home).Property(Enable.ScreenshotMode))</visible>
			</control>
		</definition>
	</include>
</includes>