<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="LandscapeFixed">
		<control type="fixedlist" id="52">
			<include>contents52list</include>
		</control>
	</include>
	<include name="LandscapeWrap">
		<control type="wraplist" id="52">
			<include>contents52list</include>
		</control>
	</include>
	<include name="contents52list">
		<width>100%</width>
		<height>960</height>
		<onleft>52</onleft>
		<onright>52</onright>
		<onup condition="!ListItem.IsParentFolder">4401</onup>
		<onup condition="String.IsEmpty(ListItem.Title)">SetProperty(MediaMenu,True,Home)</onup>
		<onup condition="String.IsEmpty(ListItem.Title)">SetFocus(9050)</onup>
		<ondown condition="Control.IsVisible(95260)">95260</ondown>
		<ondown condition="!Control.IsVisible(95260)">4400</ondown>
		<pagecontrol>95260</pagecontrol>
		<focusposition>1</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<viewtype label="31076">bigwrap</viewtype>
		<scrolltime tween="sine" easing="inout">500</scrolltime>
		<visible>!Skin.HasSetting(skinvariables.viewtypes) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(sets) | Container.Content(videoversions)] | Window.IsActive(music) + Container.Content(artists) | !Window.IsActive(music) + Skin.HasSetting(skinvariables.viewtypes) + $EXP[Exp_View_52]</visible>
		<itemlayout height="642" width="680" condition="![Skin.HasSetting(Enable.LandscapeNoFlow) + !Control.IsVisible(6010)]" />
		<focusedlayout height="636" width="680" condition="![Skin.HasSetting(Enable.LandscapeNoFlow) + !Control.IsVisible(6010)]" />
		<itemlayout height="642" width="710" condition="Skin.HasSetting(Enable.LandscapeNoFlow)">
			<control type="group">
				<left>-100</left>
				<top>-20</top>
				<include>LandscapeItem0</include>
				<control type="image">
					<include>WatchedOverlayLandscape</include>
					<texture>$VAR[OverlayVar]</texture>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="642" width="710" condition="Skin.HasSetting(Enable.LandscapeNoFlow)">
			<control type="group">
				<animation effect="zoom" start="100" end="112" center="250,370" time="300" reversible="false" tween="cubic">Focus</animation>
				<left>-100</left>
				<top>-20</top>
				<include>LandscapeItem0</include>
				<control type="image">
					<include>WatchedOverlayLandscape</include>
					<texture>$VAR[OverlayVar]</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="View_52_Landscape">
		<control type="group">
			<visible>Control.IsVisible(52)</visible>
			<top>580</top>
			<include>ViewAnimation</include>
			<include condition="Skin.HasSetting(LandscapeWrapList)">LandscapeFixed</include>
			<include condition="!Skin.HasSetting(LandscapeWrapList)">LandscapeWrap</include>
			<control type="group">
				<top>-20</top>
				<camera x="960" y="200" />
				<control type="group" id="6011">
					<visible>Container.OnNext + !Skin.HasSetting(Enable.LandscapeNoFlow)</visible>
					<animation effect="slide" end="-300,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>75</left>
						<visible>Container.OnNext</visible>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-40" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem-3</include>
					</control>
					<control type="group">
						<left>375</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="260" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem-2</include>
					</control>
					<control type="group">
						<left>1442</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2250" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem2</include>
					</control>
					<control type="group">
						<left>1142</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="1950" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>842</left>
							<visible>!String.IsEmpty(Container(52).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="1650" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1650" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>LandscapeItem0</include>
						</control>
						<control type="group">
							<left>610</left>
							<visible>Container.OnNext</visible>
							<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
							<animation effect="rotatey" center="485" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<include>LandscapeItem-1</include>
						</control>
					</control>
				</control>
				<control type="group" id="6012">
					<visible>Container.OnPrevious + !Skin.HasSetting(Enable.LandscapeNoFlow)</visible>
					<animation effect="slide" end="300,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1142</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="1950" start="55" end="55" time="0" condition="true">Conditional</animation>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<include>LandscapeItem3</include>
					</control>
					<control type="group">
						<left>842</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="1650" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem2</include>
					</control>
					<control type="group">
						<left>-225</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-340" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem-2</include>
					</control>
					<control type="group">
						<left>75</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="-40" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>375</left>
							<visible>!String.IsEmpty(Container(52).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="260" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="260" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>LandscapeItem0</include>
						</control>
						<control type="group">
							<left>610</left>
							<visible>!String.IsEmpty(Container(52).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1425" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<include>LandscapeItem1</include>
						</control>
					</control>
				</control>
				<control type="group" id="6010">
					<visible>!Control.IsVisible(6011) + !Control.IsVisible(6012) + !Skin.HasSetting(Enable.LandscapeNoFlow)</visible>
					<control type="group">
						<left>75</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="-40" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem-2</include>
					</control>
					<control type="group">
						<left>375</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="260" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem-1</include>
					</control>
					<control type="group">
						<left>1142</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="1950" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem2</include>
					</control>
					<control type="group">
						<left>842</left>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<animation effect="rotatey" center="1650" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>LandscapeItem1</include>
					</control>
					<control type="group">
						<left>610</left>
						<!-- Camera bug workaround. When camera tag is applied to the group, label will be invisible -->
						<animation effect="rotatey" start="1" end="1" condition="Skin.HasSetting(Disable.UnwatchedIcon) + Container.Content(tvshows)">Conditional</animation>
						<visible>!String.IsEmpty(Container(52).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(LandscapeWrapList)</visible>
						<include>LandscapeItem0</include>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="LandscapeThumbCommonValues">
		<width>700</width>
		<height>410</height>
		<aspectratio scalediffuse="false" aligny="center">scale</aspectratio>
		<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
		<bordersize>20</bordersize>
	</include>
	<include name="WatchedOverlayLandscape">
		<left>617</left>
		<top>19</top>
		<width>65</width>
		<height>65</height>
		<aspectratio align="center" aligny="top">keep</aspectratio>
		<bordersize>1</bordersize>
		<visible>[!String.IsEmpty(Skin.String(52.Movies.DisableOverlay)) + Container.Content(movies)] | [!String.IsEmpty(Skin.String(52.Sets.DisableOverlay)) + Container.Content(sets)] | [!String.IsEmpty(Skin.String(52.TV.DisableOverlay)) + Container.Content(tvshows)] | [!String.IsEmpty(Skin.String(52.Episodes.DisableOverlay)) + Container.Content(episodes)]</visible>
	</include>
	<include name="LandscapeItem-3">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem-3Var]</texture>
		</control>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">20</param>
			<param name="top">20</param>
			<param name="label">$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-3).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="LandscapeItem-2">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem-2Var]</texture>
		</control>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">20</param>
			<param name="top">20</param>
			<param name="label">$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-2).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="LandscapeItem-1">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem-1Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayLandscape</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">20</param>
			<param name="top">20</param>
			<param name="label">$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(-1).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="LandscapeItem0">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem0Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayLandscape</include>
			<texture>$VAR[IconOverlay0Var]</texture>
		</control>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">20</param>
			<param name="top">20</param>
		</include>
	</include>
	<include name="LandscapeItem1">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem1Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayLandscape</include>
			<texture>$VAR[IconOverlay1Var]</texture>
		</control>
		<include condition="Skin.HasSetting(Disable.UnwatchedIcon)" content="UnwatchedEpisodeOverlay">
			<param name="left">20</param>
			<param name="top">20</param>
			<param name="label">$INFO[ListItem(1).Property(UnWatchedEpisodes)]</param>
			<param name="visible">Integer.IsGreater(ListItem(1).Property(UnWatchedEpisodes),0)</param>
		</include>
	</include>
	<include name="LandscapeItem2">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem2Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayLandscape</include>
			<texture>$VAR[IconOverlay2Var]</texture>
		</control>
	</include>
	<include name="LandscapeItem3">
		<control type="image">
			<include>LandscapeThumbCommonValues</include>
			<texture background="true" diffuse="thumbs/thumb_mask.png">$VAR[LandscapeItem3Var]</texture>
		</control>
		<control type="image">
			<include>WatchedOverlayLandscape</include>
			<texture>$VAR[IconOverlay3Var]</texture>
		</control>
	</include>
	<variable name="LandscapeItem-3Var">
		<value condition="!String.IsEmpty(ListItem(-3).Art(landscape))">$INFO[ListItem(-3).Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem(-3).Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem(-3).Art(fanart)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(-3).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(-3).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(-3).Art(tvshow.landscape))">$INFO[ListItem(-3).Art(tvshow.landscape)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(-3).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(-3).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(-3).Art(fanart))">$INFO[ListItem(-3).Art(fanart)]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="LandscapeItem-2Var">
		<value condition="!String.IsEmpty(ListItem(-2).Art(landscape))">$INFO[ListItem(-2).Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem(-2).Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem(-2).Art(fanart)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(-2).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(-2).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(-2).Art(tvshow.landscape))">$INFO[ListItem(-2).Art(tvshow.landscape)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(-2).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(-2).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(-2).Art(fanart))">$INFO[ListItem(-2).Art(fanart)]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="LandscapeItem-1Var">
		<value condition="!String.IsEmpty(ListItem(-1).Art(landscape))">$INFO[ListItem(-1).Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem(-1).Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem(-1).Art(fanart)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(-1).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(-1).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(-1).Art(tvshow.landscape))">$INFO[ListItem(-1).Art(tvshow.landscape)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(-1).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(-1).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(-1).Art(fanart))">$INFO[ListItem(-1).Art(fanart)]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="LandscapeItem0Var">
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem.Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem.Art(fanart)]</value>
		<value>$VAR[NoSpoilerIconVar]</value>
	</variable>
	<variable name="LandscapeItem1Var">
		<value condition="!String.IsEmpty(ListItem(1).Art(landscape))">$INFO[ListItem(1).Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem(1).Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem(1).Art(fanart)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(1).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(1).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(1).Art(tvshow.landscape))">$INFO[ListItem(1).Art(tvshow.landscape)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(1).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(1).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(1).Art(fanart))">$INFO[ListItem(1).Art(fanart)]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="LandscapeItem2Var">
		<value condition="!String.IsEmpty(ListItem(2).Art(landscape))">$INFO[ListItem(2).Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem(2).Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem(2).Art(fanart)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(2).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(2).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(2).Art(tvshow.landscape))">$INFO[ListItem(2).Art(tvshow.landscape)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(2).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(2).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(2).Art(fanart))">$INFO[ListItem(2).Art(fanart)]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="LandscapeItem3Var">
		<value condition="!String.IsEmpty(ListItem(3).Art(landscape))">$INFO[ListItem(3).Art(landscape)]</value>
		<value condition="!String.IsEmpty(Container(52).ListItem(3).Art(fanart)) + ![Container.Content(episodes) | Container.Content(seasons)]">$INFO[Container(52).ListItem(3).Art(fanart)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(3).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(3).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(3).Art(tvshow.landscape))">$INFO[ListItem(3).Art(tvshow.landscape)]</value>
		<value condition="Container.Content(episodes) + String.IsEqual(ListItem(3).Overlay,OverlayUnwatched.png) + String.IsEqual(ListItem(3).Icon,OverlaySpoiler.png) + !String.IsEmpty(ListItem(3).Art(fanart))">$INFO[ListItem(3).Art(fanart)]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
</includes>