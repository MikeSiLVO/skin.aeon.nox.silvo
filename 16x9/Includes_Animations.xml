<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="WindowOpenCloseAnimation">
		<animation effect="slide" tween="cubic" time="600" start="0,1080" end="0,0" condition="!Control.IsVisible(509)">WindowOpen</animation>
		<animation effect="slide" tween="cubic" time="600" start="0,1080" end="0,0" delay="200" condition="Control.IsVisible(509)">WindowOpen</animation>
		<animation effect="slide" tween="cubic" time="600" end="0,1080" start="0,0">WindowClose</animation>
	</include>
	<include name="DialogOpenCloseAnimation">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="150" end="100" center="960,640" time="250" tween="cubic" easing="out" />
			<effect type="fade" end="100" time="100" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="100" delay="100" />
			<effect type="zoom" start="100" end="130" center="960,640" time="250" tween="cubic" easing="in" />
		</animation>
	</include>
	<include name="VisibleFadeAnimation">
		<animation effect="fade" time="250">Visible</animation>
		<animation effect="fade" time="250">Hidden</animation>
	</include>
	<include name="SettingsFadeAnimation">
		<animation effect="fade" time="250">Visible</animation>
		<animation effect="fade" time="50">Hidden</animation>
	</include>
	<include name="WindowSettingsFadeAnimation">
		<animation effect="fade" time="250" delay="100">WindowOpen</animation>
		<animation effect="fade" time="50">WindowClose</animation>
	</include>
	<include name="ViewAnimation">
		<animation effect="fade" time="300" delay="200">Visible</animation>
	</include>
	<include name="SubMenuAnimation">
		<animation effect="fade" start="100" end="0" time="200" condition="!ControlGroup(9001).HasFocus() + !Control.HasFocus(99100)">Conditional</animation>
	</include>
	<include name="FocusFadeInAnimation">
		<animation effect="fade" start="0" end="100" time="200" reversible="false">Focus</animation>
		<animation effect="fade" start="100" end="0" time="200" reversible="false">UnFocus</animation>
	</include>
	<include name="FocusFadeOutAnimation">
		<animation effect="fade" start="100" end="0" time="200" reversible="false">Focus</animation>
		<animation effect="fade" start="0" end="100" time="200" reversible="false">UnFocus</animation>
	</include>
	<include name="NotifyOpenCloseAnimation">
		<animation effect="slide" start="0,-138" tween="cubic" easing="inout" time="720">WindowOpen</animation>
		<animation effect="slide" end="0,-138" tween="cubic" easing="inout" time="720">WindowClose</animation>
	</include>
	<include name="InfoPanelDelayAnimation">
		<visible>![Container.OnNext | Container.OnPrevious]</visible>
		<animation effect="fade" end="100" time="120" delay="1000" condition="String.IsEqual(Skin.String(InfoPanel.Delay),1)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="2000" condition="String.IsEqual(Skin.String(InfoPanel.Delay),2)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="3000" condition="String.IsEqual(Skin.String(InfoPanel.Delay),3)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="4000" condition="String.IsEqual(Skin.String(InfoPanel.Delay),4)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="5000" condition="String.IsEqual(Skin.String(InfoPanel.Delay),5)">Visible</animation>
	</include>
	<include name="ShowCaseDelayAnimation">
		<visible>![Container.OnNext | Container.OnPrevious]</visible>
		<animation effect="fade" end="100" time="120" delay="1000" condition="String.IsEqual(Skin.String(ShowCase.Delay),1)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="2000" condition="String.IsEqual(Skin.String(ShowCase.Delay),2)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="3000" condition="String.IsEqual(Skin.String(ShowCase.Delay),3)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="4000" condition="String.IsEqual(Skin.String(ShowCase.Delay),4)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="5000" condition="String.IsEqual(Skin.String(ShowCase.Delay),5)">Visible</animation>
	</include>
	<include name="MyFlixDelayAnimation">
		<visible>![Container.OnNext | Container.OnPrevious]</visible>
		<animation effect="fade" end="100" time="120" delay="1000" condition="String.IsEqual(Skin.String(MyFlix.Delay),1)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="2000" condition="String.IsEqual(Skin.String(MyFlix.Delay),2)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="3000" condition="String.IsEqual(Skin.String(MyFlix.Delay),3)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="4000" condition="String.IsEqual(Skin.String(MyFlix.Delay),4)">Visible</animation>
		<animation effect="fade" end="100" time="120" delay="5000" condition="String.IsEqual(Skin.String(MyFlix.Delay),5)">Visible</animation>
	</include>
	<include name="OpenCaseAnimation">
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4444) + !ListItem.IsParentFolder">
			<effect type="rotatey" center="19" start="0" end="70" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="3500" center="19" start="0" end="-70" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4446)">
			<effect type="rotatey" center="19" start="0" end="70" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="6000" center="19" start="0" end="-70" time="1000" tween="quadratic" easing="out" />
		</animation>
	</include>
	<include name="MyFlixModAnimation">
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4447)">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="2000" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="6000" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="5000" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="4500" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="4000" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="3500" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="3000" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Control.IsVisible(4448) + !String.IsEmpty(Container(4500).ListItemAbsolute(0).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(2).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(3).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(4).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(5).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(6).Art(discart)) + String.IsEmpty(Container(4500).ListItemAbsolute(7).Art(discart))">
			<effect type="rotatey" center="19" start="0" end="40" time="1000" tween="quadratic" easing="out" />
			<effect type="rotatey" delay="2500" center="19" start="0" end="-40" time="1000" tween="quadratic" easing="out" />
		</animation>
	</include>
	<include name="ShowCaseModDiscAnimation">
		<animation type="Conditional" condition="Control.IsVisible(4444)" reversible="false">
			<effect type="slide" start="1200,0" end="0,0" delay="0" time="2600" tween="cubic" easing="inout" />
			<effect type="rotate" start="0" center="auto" end="720" delay="0" time="2600" tween="cubic" easing="inout" />
		</animation>
	</include>
	<include name="AnimatedBackgroundAnimation">
		<animation effect="zoom" start="110" end="130" center="auto" time="10000" pulse="true" condition="Skin.HasSetting(Enable.AnimatedBackgrounds) + !Window.IsVisible(movieinformation)">Conditional</animation>
		<animation effect="slide" start="-15,-15" end="15,15" time="5000" pulse="true" condition="Skin.HasSetting(Enable.AnimatedBackgrounds) + !Window.IsVisible(movieinformation)">Conditional</animation>
	</include>
	<include name="SlideLeftSpinningDiscAnimation">
		<animation type="WindowOpen" reversible="false">
			<effect type="slide" tween="cubic" easing="inout" time="1500" delay="100" start="-800" end="0" />
			<effect type="rotate" end="-360" center="auto" time="2000" delay="0" loop="false" tween="cubic" easing="inout" />
		</animation>
		<animation type="Conditional" reversible="false" condition="!Container.OnNext + !Container.OnPrevious">
			<effect type="rotate" end="-360" center="auto" time="6400" delay="1200" loop="false" tween="cubic" easing="inout" />
		</animation>
	</include>
</includes>